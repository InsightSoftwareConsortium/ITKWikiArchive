<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" />
<title>ITK/Examples/ImageProcessing/Upsampling - KitwarePublic</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23.8" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/Wiki/opensearch_desc.php" title="KitwarePublic (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://itk.org/Wiki/api.php?action=rsd" />
<link rel="copyright" href="http://creativecommons.org/licenses/by/2.5/" />
<link rel="alternate" type="application/atom+xml" title="KitwarePublic Atom feed" href="/Wiki/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://itk.org/Wiki/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.skinning.interface%7Cmediawiki.ui.button%7Cskins.monobook.styles&amp;only=styles&amp;skin=monobook&amp;*" />
<!--[if IE 6]><link rel="stylesheet" href="/Wiki/skins/monobook/IE60Fixes.css?303" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/Wiki/skins/monobook/IE70Fixes.css?303" media="screen" /><![endif]--><meta name="ResourceLoaderDynamicStyles" content="" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: KitwarePublicWikiDB:resourceloader:filter:minify-css:7:f67a91830b2c06c30170e182d61a9a1b */</style>
<script src="http://itk.org/Wiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=monobook&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"ITK/Examples/ImageProcessing/Upsampling","wgTitle":"ITK/Examples/ImageProcessing/Upsampling","wgCurRevisionId":50768,"wgRevisionId":50768,"wgArticleId":9055,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"ITK/Examples/ImageProcessing/Upsampling","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($,jQuery){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":1,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rows":25,"showhiddencats":0,"shownumberswatching":1,"showtoolbar":1,"skin":"monobook","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":1,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,
"useeditwarning":1,"prefershttps":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function($,jQuery){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: KitwarePublicWikiDB:resourceloader:filter:minify-js:7:6fb34dd1cd86154205b858dd017713f7 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cmake {line-height: normal;}
.source-cmake li, .source-cmake pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cmake
 * CSS class: source-cmake, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cmake.source-cmake .de1, .cmake.source-cmake .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cmake.source-cmake  {font-family:monospace;}
.cmake.source-cmake .imp {font-weight: bold; color: red;}
.cmake.source-cmake li, .cmake.source-cmake .li1 {font-weight: normal; vertical-align:top;}
.cmake.source-cmake .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cmake.source-cmake .li2 {font-weight: bold; vertical-align:top;}
.cmake.source-cmake .kw1 {color: #1f3f81; font-style: bold;}
.cmake.source-cmake .kw2 {color: #1f3f81;}
.cmake.source-cmake .kw3 {color: #077807; font-sytle: italic;}
.cmake.source-cmake .co1 {color: #666666; font-style: italic;}
.cmake.source-cmake .es0 {color: #000099; font-weight: bold;}
.cmake.source-cmake .es1 {color: #b08000;}
.cmake.source-cmake .es2 {color: #0000cd;}
.cmake.source-cmake .sy0 {color: #197d8b;}
.cmake.source-cmake .st0 {color: #912f11;}
.cmake.source-cmake .re0 {color: #b08000;}
.cmake.source-cmake .re1 {color: #0000cd;}
.cmake.source-cmake .ln-xtra, .cmake.source-cmake li.ln-xtra, .cmake.source-cmake div.ln-xtra {background-color: #ffc;}
.cmake.source-cmake span.xtra { display:block; }

/*]]>*/
</style></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-ITK_Examples_ImageProcessing_Upsampling skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">ITK/Examples/ImageProcessing/Upsampling</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From KitwarePublic</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="/Wiki/ITK" title="ITK">ITK</a>&lrm; | <a href="/Wiki/ITK/Examples" title="ITK/Examples">Examples</a></span></div>
		<div id="jump-to-nav" class="mw-jump">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Upsampling.cxx"><span class="tocnumber">1</span> <span class="toctext">Upsampling.cxx</span></a></li>
<li class="toclevel-1"><a href="#CMakeLists.txt"><span class="tocnumber">2</span> <span class="toctext">CMakeLists.txt</span></a></li>
<li class="toclevel-1"><a href="#Download_and_Build_Upsampling"><span class="tocnumber">3</span> <span class="toctext">Download and Build Upsampling</span></a></li>
<li class="toclevel-1"><a href="#Building_All_of_the_Examples"><span class="tocnumber">4</span> <span class="toctext">Building All of the Examples</span></a></li>
<li class="toclevel-1"><a href="#ItkVtkGlue"><span class="tocnumber">5</span> <span class="toctext">ItkVtkGlue</span></a>
<ul>
<li class="toclevel-2"><a href="#ITK_.3E.3D_4"><span class="tocnumber">5.1</span> <span class="toctext">ITK &gt;= 4</span></a></li>
<li class="toclevel-2"><a href="#ITK_.3C_4"><span class="tocnumber">5.2</span> <span class="toctext">ITK &lt; 4</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Upsampling.cxx">Upsampling.cxx</span></h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="coMULTI">/**
  \file Upsampling.cxx
  \date 15 april 2011
  \author Francis Girard
&#160;
  A simple example showing how to use the ResampleImageFilter and the 
  BSplineInterpolateImageFunction to (up)scale an image using bicubic
  interpolation.
*/</span>
&#160;
<span class="co2">#include &quot;itkImage.h&quot;</span>
<span class="co2">#include &quot;itkImageFileReader.h&quot;</span>
<span class="co2">#include &quot;itkImageFileWriter.h&quot;</span>
<span class="co2">#include &quot;itkIdentityTransform.h&quot;</span>
<span class="co2">#include &quot;itkBSplineInterpolateImageFunction.h&quot;</span>
<span class="co2">#include &quot;itkResampleImageFilter.h&quot;</span>
&#160;
<span class="co2">#include &lt;iostream&gt;</span>
&#160;
<span class="kw4">int</span> main<span class="br0">&#40;</span> <span class="kw4">int</span> argc, <span class="kw4">char</span> <span class="sy2">*</span> argv<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#41;</span>
<span class="br0">&#123;</span>
  <span class="kw1">if</span><span class="br0">&#40;</span> argc <span class="sy3">!</span><span class="sy1">=</span> <span class="nu0">5</span> <span class="br0">&#41;</span> 
  <span class="br0">&#123;</span> 
    std<span class="sy4">::</span><span class="kw3">cerr</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;Usage: &quot;</span>
              <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span>
              <span class="sy1">&lt;&lt;</span> argv<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span>
              <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; inputImageFile outputImageFile nNewWidth nNewHeight&quot;</span>
              <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
&#160;
    <span class="kw1">return</span> <span class="kw2">EXIT_FAILURE</span><span class="sy4">;</span>
  <span class="br0">&#125;</span>
&#160;
  <span class="co1">// Typedef's for pixel, image, reader and writer types</span>
  <span class="kw4">typedef</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> T_InputPixel<span class="sy4">;</span>
  <span class="kw4">typedef</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> T_OutputPixel<span class="sy4">;</span>
&#160;
  <span class="co1">// Doesn't work for RGB pixels</span>
  <span class="co1">//typedef itk::CovariantVector&lt;unsigned char, 3&gt; T_InputPixel;</span>
  <span class="co1">//typedef itk::CovariantVector&lt;unsigned char, 3&gt; T_OutputPixel;</span>
&#160;
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">Image</span><span class="sy1">&lt;</span>T_InputPixel, <span class="nu0">2</span><span class="sy1">&gt;</span> T_Image<span class="sy4">;</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">ImageFileReader</span><span class="sy1">&lt;</span>T_Image<span class="sy1">&gt;</span> T_Reader<span class="sy4">;</span>
&#160;
  <span class="kw4">typedef</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> T_WritePixel<span class="sy4">;</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">Image</span><span class="sy1">&lt;</span>T_WritePixel, <span class="nu0">2</span><span class="sy1">&gt;</span> T_WriteImage<span class="sy4">;</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">ImageFileWriter</span><span class="sy1">&lt;</span>T_WriteImage<span class="sy1">&gt;</span> T_Writer<span class="sy4">;</span>
&#160;
  <span class="co1">// Typedefs for the different (numerous!) elements of the &quot;resampling&quot;</span>
&#160;
  <span class="co1">// Identity transform.</span>
  <span class="co1">// We don't want any transform on our image except rescaling which is not</span>
  <span class="co1">// specified by a transform but by the input/output spacing as we will see</span>
  <span class="co1">// later.</span>
  <span class="co1">// So no transform will be specified.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">IdentityTransform</span><span class="sy1">&lt;</span><span class="kw4">double</span>, <span class="nu0">2</span><span class="sy1">&gt;</span>
               T_Transform<span class="sy4">;</span>
&#160;
  <span class="co1">// If ITK resampler determines there is something to interpolate which is</span>
  <span class="co1">// usually the case when upscaling (!) then we must specify the interpolation</span>
  <span class="co1">// algorithm. In our case, we want bicubic interpolation. One way to implement</span>
  <span class="co1">// it is with a third order b-spline. So the type is specified here and the</span>
  <span class="co1">// order will be specified with a method call later on.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">BSplineInterpolateImageFunction</span><span class="sy1">&lt;</span>T_Image, <span class="kw4">double</span>, <span class="kw4">double</span><span class="sy1">&gt;</span>
               T_Interpolator<span class="sy4">;</span>
&#160;
  <span class="co1">// The resampler type itself.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">ResampleImageFilter</span><span class="sy1">&lt;</span>T_Image, T_Image<span class="sy1">&gt;</span>
               T_ResampleFilter<span class="sy4">;</span>
&#160;
&#160;
  <span class="co1">// Prepare the reader and update it right away to know the sizes beforehand.</span>
&#160;
  T_Reader<span class="sy4">::</span><span class="me2">Pointer</span> pReader <span class="sy1">=</span> T_Reader<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  pReader<span class="sy2">-</span><span class="sy1">&gt;</span>SetFileName<span class="br0">&#40;</span> argv<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  pReader<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Prepare the resampler.</span>
&#160;
  <span class="co1">// Instantiate the transform and specify it should be the id transform.</span>
  T_Transform<span class="sy4">::</span><span class="me2">Pointer</span> _pTransform <span class="sy1">=</span> T_Transform<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  _pTransform<span class="sy2">-</span><span class="sy1">&gt;</span>SetIdentity<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Instantiate the b-spline interpolator and set it as the third order</span>
  <span class="co1">// for bicubic.</span>
  T_Interpolator<span class="sy4">::</span><span class="me2">Pointer</span> _pInterpolator <span class="sy1">=</span> T_Interpolator<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  _pInterpolator<span class="sy2">-</span><span class="sy1">&gt;</span>SetSplineOrder<span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Instantiate the resampler. Wire in the transform and the interpolator.</span>
  T_ResampleFilter<span class="sy4">::</span><span class="me2">Pointer</span> _pResizeFilter <span class="sy1">=</span> T_ResampleFilter<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  _pResizeFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetTransform<span class="br0">&#40;</span>_pTransform<span class="br0">&#41;</span><span class="sy4">;</span>
  _pResizeFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetInterpolator<span class="br0">&#40;</span>_pInterpolator<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Set the output origin. You may shift the original image &quot;inside&quot; the</span>
  <span class="co1">// new image size by specifying something else than 0.0, 0.0 here.</span>
&#160;
  <span class="kw4">const</span> <span class="kw4">double</span> vfOutputOrigin<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span>  <span class="sy1">=</span> <span class="br0">&#123;</span> <span class="nu16">0.0</span>, <span class="nu16">0.0</span> <span class="br0">&#125;</span><span class="sy4">;</span>
  _pResizeFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetOutputOrigin<span class="br0">&#40;</span>vfOutputOrigin<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">//     Compute and set the output spacing</span>
  <span class="co1">//     Compute the output spacing from input spacing and old and new sizes.</span>
  <span class="co1">//     </span>
  <span class="co1">//     The computation must be so that the following holds:</span>
  <span class="co1">//     </span>
  <span class="co1">//     new width         old x spacing</span>
  <span class="co1">//     ----------   =   ---------------</span>
  <span class="co1">//     old width         new x spacing</span>
  <span class="co1">//    </span>
  <span class="co1">//    </span>
  <span class="co1">//     new height         old y spacing</span>
  <span class="co1">//    ------------  =   ---------------</span>
  <span class="co1">//     old height         new y spacing</span>
  <span class="co1">//</span>
  <span class="co1">//     So either we specify new height and width and compute new spacings (as</span>
  <span class="co1">//     we do here) or we specify new spacing and compute new height and width</span>
  <span class="co1">//     and computations that follows need to be modified a little (as it is</span>
  <span class="co1">//     done at step 2 there:</span>
  <span class="co1">//       http://itk.org/Wiki/ITK/Examples/DICOM/ResampleDICOM)</span>
  <span class="co1">//</span>
  <span class="kw4">unsigned</span> <span class="kw4">int</span> nNewWidth <span class="sy1">=</span> <span class="kw3">atoi</span><span class="br0">&#40;</span>argv<span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="kw4">unsigned</span> <span class="kw4">int</span> nNewHeight <span class="sy1">=</span> <span class="kw3">atoi</span><span class="br0">&#40;</span>argv<span class="br0">&#91;</span><span class="nu0">4</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Fetch original image size.</span>
  <span class="kw4">const</span> T_Image<span class="sy4">::</span><span class="me2">RegionType</span><span class="sy3">&amp;</span> inputRegion <span class="sy1">=</span> 
                              pReader<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetLargestPossibleRegion<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="kw4">const</span> T_Image<span class="sy4">::</span><span class="me2">SizeType</span><span class="sy3">&amp;</span> vnInputSize <span class="sy1">=</span> inputRegion.<span class="me1">GetSize</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="kw4">unsigned</span> <span class="kw4">int</span> nOldWidth <span class="sy1">=</span> vnInputSize<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy4">;</span>
  <span class="kw4">unsigned</span> <span class="kw4">int</span> nOldHeight <span class="sy1">=</span> vnInputSize<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Fetch original image spacing.</span>
  <span class="kw4">const</span> T_Image<span class="sy4">::</span><span class="me2">SpacingType</span><span class="sy3">&amp;</span> vfInputSpacing <span class="sy1">=</span> 
                                            pReader<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>GetSpacing<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
                                            <span class="co1">// Will be {1.0, 1.0} in the usual</span>
                                            <span class="co1">// case.</span>
&#160;
  <span class="kw4">double</span> vfOutputSpacing<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="sy4">;</span>
  vfOutputSpacing<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> vfInputSpacing<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy2">*</span> <span class="br0">&#40;</span><span class="kw4">double</span><span class="br0">&#41;</span> nOldWidth <span class="sy2">/</span> <span class="br0">&#40;</span><span class="kw4">double</span><span class="br0">&#41;</span> nNewWidth<span class="sy4">;</span>
  vfOutputSpacing<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> vfInputSpacing<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy2">*</span> <span class="br0">&#40;</span><span class="kw4">double</span><span class="br0">&#41;</span> nOldHeight <span class="sy2">/</span> <span class="br0">&#40;</span><span class="kw4">double</span><span class="br0">&#41;</span> nNewHeight<span class="sy4">;</span>
&#160;
  <span class="co1">// Set the output spacing. If you comment out the following line, the original</span>
  <span class="co1">// image will be simply put in the upper left corner of the new image without</span>
  <span class="co1">// any scaling.</span>
  _pResizeFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetOutputSpacing<span class="br0">&#40;</span>vfOutputSpacing<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Set the output size as specified on the command line.</span>
&#160;
  itk<span class="sy4">::</span><span class="me2">Size</span><span class="sy1">&lt;</span><span class="nu0">2</span><span class="sy1">&gt;</span> vnOutputSize <span class="sy1">=</span> <span class="br0">&#123;</span> <span class="br0">&#123;</span>nNewWidth, nNewHeight<span class="br0">&#125;</span> <span class="br0">&#125;</span><span class="sy4">;</span>
  _pResizeFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetSize<span class="br0">&#40;</span>vnOutputSize<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Specify the input.</span>
&#160;
  _pResizeFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span>pReader<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Write the result</span>
  T_Writer<span class="sy4">::</span><span class="me2">Pointer</span> pWriter <span class="sy1">=</span> T_Writer<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  pWriter<span class="sy2">-</span><span class="sy1">&gt;</span>SetFileName<span class="br0">&#40;</span>argv<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  pWriter<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span>_pResizeFilter<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  pWriter<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="kw1">return</span> <span class="kw2">EXIT_SUCCESS</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="CMakeLists.txt">CMakeLists.txt</span></h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cmake source-cmake"><pre class="de1"><span class="kw1">cmake_minimum_required</span><span class="sy0">(</span><span class="kw3">VERSION</span> 2.8<span class="sy0">)</span>
&#160;
<span class="kw1">project</span><span class="sy0">(</span>Upsampling<span class="sy0">)</span>
&#160;
<span class="kw1">find_package</span><span class="sy0">(</span>ITK REQUIRED<span class="sy0">)</span>
<span class="kw1">include</span><span class="sy0">(</span><span class="re0">${ITK_USE_FILE}</span><span class="sy0">)</span>
<span class="kw1">if</span> <span class="sy0">(</span>ITKVtkGlue_LOADED<span class="sy0">)</span>
  <span class="kw1">find_package</span><span class="sy0">(</span>VTK REQUIRED<span class="sy0">)</span>
  <span class="kw1">include</span><span class="sy0">(</span><span class="re0">${VTK_USE_FILE}</span><span class="sy0">)</span>
<span class="kw1">endif</span><span class="sy0">()</span>
&#160;
<span class="kw1">add_executable</span><span class="sy0">(</span>Upsampling MACOSX_BUNDLE Upsampling.cxx<span class="sy0">)</span>
&#160;
<span class="kw1">if</span><span class="sy0">(</span> <span class="st0">&quot;<span class="es1">${ITK_VERSION_MAJOR}</span>&quot;</span> <span class="kw3">LESS</span> 4 <span class="sy0">)</span>
  <span class="kw1">target_link_libraries</span><span class="sy0">(</span>Upsampling ITKReview <span class="re0">${ITK_LIBRARIES}</span><span class="sy0">)</span>
<span class="kw1">else</span><span class="sy0">(</span> <span class="st0">&quot;<span class="es1">${ITK_VERSION_MAJOR}</span>&quot;</span> <span class="kw3">LESS</span> 4 <span class="sy0">)</span>
  <span class="kw1">target_link_libraries</span><span class="sy0">(</span>Upsampling <span class="re0">${ITK_LIBRARIES}</span><span class="sy0">)</span>
<span class="kw1">endif</span><span class="sy0">(</span> <span class="st0">&quot;<span class="es1">${ITK_VERSION_MAJOR}</span>&quot;</span> <span class="kw3">LESS</span> 4 <span class="sy0">)</span></pre></div></div>
<h2><span class="mw-headline" id="Download_and_Build_Upsampling">Download and Build Upsampling</span></h2>
<p>Click <a rel="nofollow" class="external text" href="http://gitorious.org/itkwikiexamplestarballs/itkwikiexamplestarballs/raw/master:Upsampling.tar">here to download <i>Upsampling</i></a> and its <i>CMakeLists.txt</i> file.
Once the tarball <i>Upsampling.tar</i> has been downloaded and extracted,
</p>
<pre>cd Upsampling/build
</pre>
<ul>
<li> If ITK is installed:
</li>
</ul>
<pre>cmake ..
</pre>
<ul>
<li> If ITK is not installed but compiled on your system, you will need to specify <b>the path to your ITK build</b>:
</li>
</ul>
<pre>cmake -DITK_DIR:PATH=<b>/home/me/itk_build</b> ..
</pre>
<p>Build the project:
</p>
<pre>make
</pre>
<p>and run it:
</p>
<pre>./Upsampling
</pre>
<p><b>WINDOWS USERS PLEASE NOTE:</b> Be sure to add the ITK bin directory to your path. This will resolve the ITK dll's at run time.
</p>
<h2><span class="mw-headline" id="Building_All_of_the_Examples">Building All of the Examples</span></h2>
<p>Many of the examples in the ITK Wiki Examples Collection require VTK. You can build all of the the examples by following <a href="/Wiki/ITK/Examples/Instructions/ForUsers#Build_all_of_the_examples" title="ITK/Examples/Instructions/ForUsers">these instructions</a>. If you are a new VTK user, you may want to try the <a href="/Wiki/ITK/Examples/Instructions/ForUsers#Use_the_Superbuild_to_build_a_proper_VTK_and_ITK" title="ITK/Examples/Instructions/ForUsers">Superbuild</a> which will build a proper ITK and VTK.
</p>
<h2><span class="mw-headline" id="ItkVtkGlue">ItkVtkGlue</span></h2>
<h3><span class="mw-headline" id="ITK_.3E.3D_4">ITK &gt;= 4</span></h3>
<p>For examples that use QuickView (which depends on VTK), you must have built ITK with Module_ITKVtkGlue=ON.
</p>
<h3><span class="mw-headline" id="ITK_.3C_4">ITK &lt; 4</span></h3>
<p>Some of the ITK Examples require VTK to display the images. If you download the entire ITK Wiki Examples Collection, the ItkVtkGlue directory will be included and configured. If you wish to just build a few examples, then you will need to <a rel="nofollow" class="external text" href="https://github.com/InsightSoftwareConsortium/ITKWikiExamples/raw/master/ItkVtkGlue.tar.gz">download ItkVtkGlue</a> and build it. When you run cmake it will ask you to specify the location of the ItkVtkGlue binary directory.
</p>
<!-- 
NewPP limit report
CPU time usage: 0.064 seconds
Real time usage: 0.066 seconds
Preprocessor visited node count: 30/1000000
Preprocessor generated node count: 127/1000000
Post‐expand include size: 2038/2097152 bytes
Template argument size: 110/2097152 bytes
Highest expansion depth: 3/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key KitwarePublicWikiDB:pcache:idhash:9055-0!*!0!!en!*!* and timestamp 20150331042246 and revision id 50768
 -->
</div><div class="printfooter">
Retrieved from "<a href="http://itk.org/Wiki/index.php?title=ITK/Examples/ImageProcessing/Upsampling&amp;oldid=50768">http://itk.org/Wiki/index.php?title=ITK/Examples/ImageProcessing/Upsampling&amp;oldid=50768</a>"</div>
		<div id='catlinks' class='catlinks catlinks-allhidden'></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div id="column-one">
	<h2>Navigation menu</h2>
	<div id="p-cactions" class="portlet" role="navigation">
		<h3>Views</h3>
		<div class="pBody">
			<ul>
				<li id="ca-nstab-main" class="selected"><a href="/Wiki/ITK/Examples/ImageProcessing/Upsampling" title="View the content page [c]" accesskey="c">Page</a></li>
				<li id="ca-talk" class="new"><a href="/Wiki/index.php?title=Talk:ITK/Examples/ImageProcessing/Upsampling&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				<li id="ca-viewsource"><a href="/Wiki/index.php?title=ITK/Examples/ImageProcessing/Upsampling&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li>
				<li id="ca-history"><a href="/Wiki/index.php?title=ITK/Examples/ImageProcessing/Upsampling&amp;action=history" rel="archives" title="Past revisions of this page [h]" accesskey="h">History</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal" role="navigation">
		<h3>Personal tools</h3>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/Wiki/index.php?title=Special:UserLogin&amp;returnto=ITK%2FExamples%2FImageProcessing%2FUpsampling" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
				<li id="pt-createaccount"><a href="/Wiki/Special:RequestAccount">Request account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo" role="banner">
<a href="/Wiki/Main_Page" style="background-image: url(/Wiki/images/KWLogo.png);" title="Visit the main page"></a>
	</div>
	<div class="generated-sidebar portlet" id="p-navigation" role="navigation">
		<h3>Navigation</h3>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/Wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-recentchanges"><a href="/Wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="/Wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
				<li id="n-help"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents" title="The place to find out">Help</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet" role="search">
		<h3><label for="searchInput">Search</label></h3>
		<div id="searchBody" class="pBody">
			<form action="/Wiki/index.php" id="searchform">
				<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" placeholder="Search" title="Search KitwarePublic [f]" accesskey="f" id="searchInput" />
				<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />&#160;
				<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />
			</form>

					</div>
	</div>
	<div class="portlet" id="p-tb" role="navigation">
		<h3>Tools</h3>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/Wiki/Special:WhatLinksHere/ITK/Examples/ImageProcessing/Upsampling" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/Wiki/Special:RecentChangesLinked/ITK/Examples/ImageProcessing/Upsampling" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
				<li id="t-specialpages"><a href="/Wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-permalink"><a href="/Wiki/index.php?title=ITK/Examples/ImageProcessing/Upsampling&amp;oldid=50768" title="Permanent link to this revision of the page">Permanent link</a></li>
				<li id="t-info"><a href="/Wiki/index.php?title=ITK/Examples/ImageProcessing/Upsampling&amp;action=info">Page information</a></li>
			</ul>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-coll-print_export" role="navigation">
		<h3>Print/export</h3>
		<div class='pBody'>
			<ul>
				<li id="coll-create_a_book"><a href="/Wiki/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=ITK%2FExamples%2FImageProcessing%2FUpsampling">Create a book</a></li>
				<li id="coll-download-as-rl"><a href="/Wiki/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=ITK%2FExamples%2FImageProcessing%2FUpsampling&amp;oldid=50768&amp;writer=rl">Download as PDF</a></li>
				<li id="t-print"><a href="/Wiki/index.php?title=ITK/Examples/ImageProcessing/Upsampling&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
			</ul>
		</div>
	</div>
</div><!-- end of the left (by default at least) column -->
<div class="visualClear"></div>
<div id="footer" role="contentinfo">
	<div id="f-copyrightico">
		<a href="http://creativecommons.org/licenses/by/2.5/"><img src="http://creativecommons.org/images/public/somerights20.png" alt="Attribution2.5" width="88" height="31" /></a>
	</div>
	<div id="f-poweredbyico">
		<a href="//www.mediawiki.org/"><img src="/Wiki/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
	</div>
	<ul id="f-list">
		<li id="lastmod"> This page was last modified on 24 December 2012, at 09:48.</li>
		<li id="viewcount">This page has been accessed 6,211 times.</li>
		<li id="copyright">Content is available under <a class="external" rel="nofollow" href="http://creativecommons.org/licenses/by/2.5/">Attribution2.5</a> unless otherwise noted.</li>
		<li id="privacy"><a href="/Wiki/KitwarePublic:Privacy_policy" title="KitwarePublic:Privacy policy">Privacy policy</a></li>
		<li id="about"><a href="/Wiki/KitwarePublic:About" title="KitwarePublic:About">About KitwarePublic</a></li>
		<li id="disclaimer"><a href="/Wiki/KitwarePublic:General_disclaimer" title="KitwarePublic:General disclaimer">Disclaimers</a></li>
	</ul>
</div>
</div>
<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"ready","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest"],null,true);
}</script>
<script>if(window.mw){
mw.config.set({"wgBackendResponseTime":289});
}</script></body></html>