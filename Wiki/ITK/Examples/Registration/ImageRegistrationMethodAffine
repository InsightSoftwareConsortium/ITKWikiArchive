<!DOCTYPE html>
<html lang="en" dir="ltr" class="client-nojs">
<head>
<meta charset="UTF-8" />
<title>ITK/Examples/Registration/ImageRegistrationMethodAffine - KitwarePublic</title>
<meta http-equiv="X-UA-Compatible" content="IE=EDGE" />
<meta name="generator" content="MediaWiki 1.23.8" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="search" type="application/opensearchdescription+xml" href="/Wiki/opensearch_desc.php" title="KitwarePublic (en)" />
<link rel="EditURI" type="application/rsd+xml" href="http://itk.org/Wiki/api.php?action=rsd" />
<link rel="copyright" href="https://creativecommons.org/licenses/by/2.5/" />
<link rel="alternate" type="application/atom+xml" title="KitwarePublic Atom feed" href="/Wiki/index.php?title=Special:RecentChanges&amp;feed=atom" />
<link rel="stylesheet" href="http://itk.org/Wiki/load.php?debug=false&amp;lang=en&amp;modules=mediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.skinning.interface%7Cmediawiki.ui.button%7Cskins.monobook.styles&amp;only=styles&amp;skin=monobook&amp;*" />
<!--[if IE 6]><link rel="stylesheet" href="/Wiki/skins/monobook/IE60Fixes.css?303" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/Wiki/skins/monobook/IE70Fixes.css?303" media="screen" /><![endif]--><meta name="ResourceLoaderDynamicStyles" content="" />
<style>a:lang(ar),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: KitwarePublicWikiDB:resourceloader:filter:minify-css:7:f67a91830b2c06c30170e182d61a9a1b */</style>
<script src="http://itk.org/Wiki/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=monobook&amp;*"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"ITK/Examples/Registration/ImageRegistrationMethodAffine","wgTitle":"ITK/Examples/Registration/ImageRegistrationMethodAffine","wgCurRevisionId":50977,"wgRevisionId":50977,"wgArticleId":8563,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"ITK/Examples/Registration/ImageRegistrationMethodAffine","wgIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function($,jQuery){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"editfont":"default","editondblclick":0,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":1,"extendwatchlist":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"math":0,"minordefault":0,"newpageshidepatrolled":0,"nickname":"","norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"rcdays":7,"rclimit":50,"rows":25,"showhiddencats":0,"shownumberswatching":1,"showtoolbar":1,"skin":"monobook","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":1,"watchdefault":1,"watchdeletion":0,"watchlistdays":3,"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,
"useeditwarning":1,"prefershttps":1,"language":"en","variant-gan":"gan","variant-iu":"iu","variant-kk":"kk","variant-ku":"ku","variant-shi":"shi","variant-sr":"sr","variant-tg":"tg","variant-uz":"uz","variant-zh":"zh","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false,"variant":"en"});},{},{});mw.loader.implement("user.tokens",function($,jQuery){mw.user.tokens.set({"editToken":"+\\","patrolToken":false,"watchToken":false});},{},{});
/* cache key: KitwarePublicWikiDB:resourceloader:filter:minify-js:7:6fb34dd1cd86154205b858dd017713f7 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script>
<style type="text/css">/*<![CDATA[*/
.source-cpp {line-height: normal;}
.source-cpp li, .source-cpp pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cpp
 * CSS class: source-cpp, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cpp.source-cpp .de1, .cpp.source-cpp .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cpp.source-cpp  {font-family:monospace;}
.cpp.source-cpp .imp {font-weight: bold; color: red;}
.cpp.source-cpp li, .cpp.source-cpp .li1 {font-weight: normal; vertical-align:top;}
.cpp.source-cpp .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cpp.source-cpp .li2 {font-weight: bold; vertical-align:top;}
.cpp.source-cpp .kw1 {color: #0000ff;}
.cpp.source-cpp .kw2 {color: #0000ff;}
.cpp.source-cpp .kw3 {color: #0000dd;}
.cpp.source-cpp .kw4 {color: #0000ff;}
.cpp.source-cpp .co1 {color: #666666;}
.cpp.source-cpp .co2 {color: #339900;}
.cpp.source-cpp .coMULTI {color: #ff0000; font-style: italic;}
.cpp.source-cpp .es0 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es1 {color: #000099; font-weight: bold;}
.cpp.source-cpp .es2 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es3 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es4 {color: #660099; font-weight: bold;}
.cpp.source-cpp .es5 {color: #006699; font-weight: bold;}
.cpp.source-cpp .br0 {color: #008000;}
.cpp.source-cpp .sy0 {color: #008000;}
.cpp.source-cpp .sy1 {color: #000080;}
.cpp.source-cpp .sy2 {color: #000040;}
.cpp.source-cpp .sy3 {color: #000040;}
.cpp.source-cpp .sy4 {color: #008080;}
.cpp.source-cpp .st0 {color: #FF0000;}
.cpp.source-cpp .nu0 {color: #0000dd;}
.cpp.source-cpp .nu6 {color: #208080;}
.cpp.source-cpp .nu8 {color: #208080;}
.cpp.source-cpp .nu12 {color: #208080;}
.cpp.source-cpp .nu16 {color:#800080;}
.cpp.source-cpp .nu17 {color:#800080;}
.cpp.source-cpp .nu18 {color:#800080;}
.cpp.source-cpp .nu19 {color:#800080;}
.cpp.source-cpp .me1 {color: #007788;}
.cpp.source-cpp .me2 {color: #007788;}
.cpp.source-cpp .ln-xtra, .cpp.source-cpp li.ln-xtra, .cpp.source-cpp div.ln-xtra {background-color: #ffc;}
.cpp.source-cpp span.xtra { display:block; }

/*]]>*/
</style><style type="text/css">/*<![CDATA[*/
.source-cmake {line-height: normal;}
.source-cmake li, .source-cmake pre {
	line-height: normal; border: 0px none white;
}
/**
 * GeSHi Dynamically Generated Stylesheet
 * --------------------------------------
 * Dynamically generated stylesheet for cmake
 * CSS class: source-cmake, CSS id: 
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 * --------------------------------------
 */
.cmake.source-cmake .de1, .cmake.source-cmake .de2 {font: normal normal 1em/1.2em monospace; margin:0; padding:0; background:none; vertical-align:top;font-family: monospace, monospace;}
.cmake.source-cmake  {font-family:monospace;}
.cmake.source-cmake .imp {font-weight: bold; color: red;}
.cmake.source-cmake li, .cmake.source-cmake .li1 {font-weight: normal; vertical-align:top;}
.cmake.source-cmake .ln {width:1px;text-align:right;margin:0;padding:0 2px;vertical-align:top;}
.cmake.source-cmake .li2 {font-weight: bold; vertical-align:top;}
.cmake.source-cmake .kw1 {color: #1f3f81; font-style: bold;}
.cmake.source-cmake .kw2 {color: #1f3f81;}
.cmake.source-cmake .kw3 {color: #077807; font-sytle: italic;}
.cmake.source-cmake .co1 {color: #666666; font-style: italic;}
.cmake.source-cmake .es0 {color: #000099; font-weight: bold;}
.cmake.source-cmake .es1 {color: #b08000;}
.cmake.source-cmake .es2 {color: #0000cd;}
.cmake.source-cmake .sy0 {color: #197d8b;}
.cmake.source-cmake .st0 {color: #912f11;}
.cmake.source-cmake .re0 {color: #b08000;}
.cmake.source-cmake .re1 {color: #0000cd;}
.cmake.source-cmake .ln-xtra, .cmake.source-cmake li.ln-xtra, .cmake.source-cmake div.ln-xtra {background-color: #ffc;}
.cmake.source-cmake span.xtra { display:block; }

/*]]>*/
</style></head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-ITK_Examples_Registration_ImageRegistrationMethodAffine skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary" role="main">
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading" lang="en"><span dir="auto">ITK/Examples/Registration/ImageRegistrationMethodAffine</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From KitwarePublic</div>
		<div id="contentSub"><span class="subpages">&lt; <a href="/Wiki/ITK" title="ITK">ITK</a>&lrm; | <a href="/Wiki/ITK/Examples" title="ITK/Examples">Examples</a></span></div>
		<div id="jump-to-nav" class="mw-jump">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>

		<!-- start content -->
<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div id="toc" class="toc"><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#ImageRegistrationMethodAffine.cxx"><span class="tocnumber">1</span> <span class="toctext">ImageRegistrationMethodAffine.cxx</span></a></li>
<li class="toclevel-1"><a href="#CMakeLists.txt"><span class="tocnumber">2</span> <span class="toctext">CMakeLists.txt</span></a></li>
<li class="toclevel-1"><a href="#Download_and_Build_ImageRegistrationMethodAffine"><span class="tocnumber">3</span> <span class="toctext">Download and Build ImageRegistrationMethodAffine</span></a></li>
<li class="toclevel-1"><a href="#Building_All_of_the_Examples"><span class="tocnumber">4</span> <span class="toctext">Building All of the Examples</span></a></li>
<li class="toclevel-1"><a href="#ItkVtkGlue"><span class="tocnumber">5</span> <span class="toctext">ItkVtkGlue</span></a>
<ul>
<li class="toclevel-2"><a href="#ITK_.3E.3D_4"><span class="tocnumber">5.1</span> <span class="toctext">ITK &gt;= 4</span></a></li>
<li class="toclevel-2"><a href="#ITK_.3C_4"><span class="tocnumber">5.2</span> <span class="toctext">ITK &lt; 4</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="ImageRegistrationMethodAffine.cxx">ImageRegistrationMethodAffine.cxx</span></h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cpp source-cpp"><pre class="de1"><span class="co2">#include &quot;itkCastImageFilter.h&quot;</span>
<span class="co2">#include &quot;itkEllipseSpatialObject.h&quot;</span>
<span class="co2">#include &quot;itkImage.h&quot;</span>
<span class="co2">#include &quot;itkImageRegistrationMethod.h&quot;</span>
<span class="co2">#include &quot;itkLinearInterpolateImageFunction.h&quot;</span>
<span class="co2">#include &quot;itkImageFileReader.h&quot;</span>
<span class="co2">#include &quot;itkImageFileWriter.h&quot;</span>
<span class="co2">#include &quot;itkMeanSquaresImageToImageMetric.h&quot;</span>
<span class="co2">#include &quot;itkRegularStepGradientDescentOptimizer.h&quot;</span>
<span class="co2">#include &quot;itkResampleImageFilter.h&quot;</span>
<span class="co2">#include &quot;itkRescaleIntensityImageFilter.h&quot;</span>
<span class="co2">#include &quot;itkSpatialObjectToImageFilter.h&quot;</span>
<span class="co2">#include &quot;itkAffineTransform.h&quot;</span>
&#160;
<span class="kw4">const</span>    <span class="kw4">unsigned</span> <span class="kw4">int</span>    Dimension <span class="sy1">=</span> <span class="nu0">2</span><span class="sy4">;</span>
<span class="kw4">typedef</span>  <span class="kw4">unsigned</span> <span class="kw4">char</span>           PixelType<span class="sy4">;</span>
&#160;
<span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">Image</span><span class="sy1">&lt;</span> PixelType, Dimension <span class="sy1">&gt;</span>  ImageType<span class="sy4">;</span>
&#160;
<span class="kw4">static</span> <span class="kw4">void</span> CreateEllipseImage<span class="br0">&#40;</span>ImageType<span class="sy4">::</span><span class="me2">Pointer</span> image<span class="br0">&#41;</span><span class="sy4">;</span>
<span class="kw4">static</span> <span class="kw4">void</span> CreateSphereImage<span class="br0">&#40;</span>ImageType<span class="sy4">::</span><span class="me2">Pointer</span> image<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="kw4">int</span>, <span class="kw4">char</span> <span class="sy2">*</span><span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="br0">&#41;</span>
<span class="br0">&#123;</span>
  <span class="co1">//  The transform that will map the fixed image into the moving image.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">AffineTransform</span><span class="sy1">&lt;</span> <span class="kw4">double</span>, Dimension <span class="sy1">&gt;</span> TransformType<span class="sy4">;</span>
&#160;
  <span class="co1">//  An optimizer is required to explore the parameter space of the transform</span>
  <span class="co1">//  in search of optimal values of the metric.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">RegularStepGradientDescentOptimizer</span>       OptimizerType<span class="sy4">;</span>
&#160;
  <span class="co1">//  The metric will compare how well the two images match each other. Metric</span>
  <span class="co1">//  types are usually parameterized by the image types as it can be seen in</span>
  <span class="co1">//  the following type declaration.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">MeanSquaresImageToImageMetric</span><span class="sy1">&lt;</span>
      ImageType,
      ImageType <span class="sy1">&gt;</span>    MetricType<span class="sy4">;</span>
&#160;
  <span class="co1">//  Finally, the type of the interpolator is declared. The interpolator will</span>
  <span class="co1">//  evaluate the intensities of the moving image at non-grid positions.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span> <span class="me2">LinearInterpolateImageFunction</span><span class="sy1">&lt;</span>
      ImageType,
      <span class="kw4">double</span>          <span class="sy1">&gt;</span>    InterpolatorType<span class="sy4">;</span>
&#160;
  <span class="co1">//  The registration method type is instantiated using the types of the</span>
  <span class="co1">//  fixed and moving images. This class is responsible for interconnecting</span>
  <span class="co1">//  all the components that we have described so far.</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">ImageRegistrationMethod</span><span class="sy1">&lt;</span>
      ImageType,
      ImageType <span class="sy1">&gt;</span>    RegistrationType<span class="sy4">;</span>
&#160;
  <span class="co1">// Create components</span>
  MetricType<span class="sy4">::</span><span class="me2">Pointer</span>         metric        <span class="sy1">=</span> MetricType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  TransformType<span class="sy4">::</span><span class="me2">Pointer</span>      transform     <span class="sy1">=</span> TransformType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  OptimizerType<span class="sy4">::</span><span class="me2">Pointer</span>      optimizer     <span class="sy1">=</span> OptimizerType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  InterpolatorType<span class="sy4">::</span><span class="me2">Pointer</span>   interpolator  <span class="sy1">=</span> InterpolatorType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  RegistrationType<span class="sy4">::</span><span class="me2">Pointer</span>   registration  <span class="sy1">=</span> RegistrationType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Each component is now connected to the instance of the registration method.</span>
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetMetric<span class="br0">&#40;</span>        metric        <span class="br0">&#41;</span><span class="sy4">;</span>
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetOptimizer<span class="br0">&#40;</span>     optimizer     <span class="br0">&#41;</span><span class="sy4">;</span>
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetTransform<span class="br0">&#40;</span>     transform     <span class="br0">&#41;</span><span class="sy4">;</span>
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetInterpolator<span class="br0">&#40;</span>  interpolator  <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Get the two images</span>
  ImageType<span class="sy4">::</span><span class="me2">Pointer</span>  fixedImage  <span class="sy1">=</span> ImageType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  ImageType<span class="sy4">::</span><span class="me2">Pointer</span> movingImage <span class="sy1">=</span> ImageType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  CreateSphereImage<span class="br0">&#40;</span>fixedImage<span class="br0">&#41;</span><span class="sy4">;</span>
  CreateEllipseImage<span class="br0">&#40;</span>movingImage<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Write the two synthetic inputs</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">ImageFileWriter</span><span class="sy1">&lt;</span> ImageType <span class="sy1">&gt;</span>  WriterType<span class="sy4">;</span>
&#160;
  WriterType<span class="sy4">::</span><span class="me2">Pointer</span>      fixedWriter <span class="sy1">=</span>  WriterType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  fixedWriter<span class="sy2">-</span><span class="sy1">&gt;</span>SetFileName<span class="br0">&#40;</span><span class="st0">&quot;fixed.png&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  fixedWriter<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span> fixedImage<span class="br0">&#41;</span><span class="sy4">;</span>
  fixedWriter<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  WriterType<span class="sy4">::</span><span class="me2">Pointer</span>      movingWriter <span class="sy1">=</span>  WriterType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  movingWriter<span class="sy2">-</span><span class="sy1">&gt;</span>SetFileName<span class="br0">&#40;</span><span class="st0">&quot;moving.png&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  movingWriter<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span> movingImage<span class="br0">&#41;</span><span class="sy4">;</span>
  movingWriter<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Set the registration inputs</span>
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetFixedImage<span class="br0">&#40;</span>fixedImage<span class="br0">&#41;</span><span class="sy4">;</span>
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetMovingImage<span class="br0">&#40;</span>movingImage<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetFixedImageRegion<span class="br0">&#40;</span>
    fixedImage<span class="sy2">-</span><span class="sy1">&gt;</span>GetLargestPossibleRegion<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">//  Initialize the transform</span>
  <span class="kw4">typedef</span> RegistrationType<span class="sy4">::</span><span class="me2">ParametersType</span> ParametersType<span class="sy4">;</span>
  ParametersType initialParameters<span class="br0">&#40;</span> transform<span class="sy2">-</span><span class="sy1">&gt;</span>GetNumberOfParameters<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// rotation matrix</span>
  initialParameters<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu16">1.0</span><span class="sy4">;</span>  <span class="co1">// R(0,0)</span>
  initialParameters<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu16">0.0</span><span class="sy4">;</span>  <span class="co1">// R(0,1)</span>
  initialParameters<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu16">0.0</span><span class="sy4">;</span>  <span class="co1">// R(1,0)</span>
  initialParameters<span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu16">1.0</span><span class="sy4">;</span>  <span class="co1">// R(1,1)</span>
&#160;
  <span class="co1">// translation vector</span>
  initialParameters<span class="br0">&#91;</span><span class="nu0">4</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu16">0.0</span><span class="sy4">;</span>
  initialParameters<span class="br0">&#91;</span><span class="nu0">5</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu16">0.0</span><span class="sy4">;</span>
&#160;
  registration<span class="sy2">-</span><span class="sy1">&gt;</span>SetInitialTransformParameters<span class="br0">&#40;</span> initialParameters <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  optimizer<span class="sy2">-</span><span class="sy1">&gt;</span>SetMaximumStepLength<span class="br0">&#40;</span> <span class="nu18">.1</span> <span class="br0">&#41;</span><span class="sy4">;</span> <span class="co1">// If this is set too high, you will get a</span>
  <span class="co1">//&quot;itk::ERROR: MeanSquaresImageToImageMetric(0xa27ce70): Too many samples map outside moving image buffer: 1818 / 10000&quot; error</span>
&#160;
  optimizer<span class="sy2">-</span><span class="sy1">&gt;</span>SetMinimumStepLength<span class="br0">&#40;</span> <span class="nu16">0.01</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Set a stopping criterion</span>
  optimizer<span class="sy2">-</span><span class="sy1">&gt;</span>SetNumberOfIterations<span class="br0">&#40;</span> <span class="nu0">200</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Connect an observer</span>
  <span class="co1">//CommandIterationUpdate::Pointer observer = CommandIterationUpdate::New();</span>
  <span class="co1">//optimizer-&gt;AddObserver( itk::IterationEvent(), observer );</span>
&#160;
  <span class="kw2">try</span>
  <span class="br0">&#123;</span>
    registration<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  <span class="br0">&#125;</span>
  <span class="kw2">catch</span><span class="br0">&#40;</span> itk<span class="sy4">::</span><span class="me2">ExceptionObject</span> <span class="sy3">&amp;</span> err <span class="br0">&#41;</span>
  <span class="br0">&#123;</span>
    std<span class="sy4">::</span><span class="kw3">cerr</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;ExceptionObject caught&#160;!&quot;</span> <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
    std<span class="sy4">::</span><span class="kw3">cerr</span> <span class="sy1">&lt;&lt;</span> err <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
    <span class="kw1">return</span> <span class="kw2">EXIT_FAILURE</span><span class="sy4">;</span>
  <span class="br0">&#125;</span>
&#160;
  <span class="co1">//  The result of the registration process is an array of parameters that</span>
  <span class="co1">//  defines the spatial transformation in an unique way. This final result is</span>
  <span class="co1">//  obtained using the \code{GetLastTransformParameters()} method.</span>
&#160;
  ParametersType finalParameters <span class="sy1">=</span> registration<span class="sy2">-</span><span class="sy1">&gt;</span>GetLastTransformParameters<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;Final parameters: &quot;</span> <span class="sy1">&lt;&lt;</span> finalParameters <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
&#160;
  <span class="co1">//  The value of the image metric corresponding to the last set of parameters</span>
  <span class="co1">//  can be obtained with the \code{GetValue()} method of the optimizer.</span>
&#160;
  <span class="kw4">const</span> <span class="kw4">double</span> bestValue <span class="sy1">=</span> optimizer<span class="sy2">-</span><span class="sy1">&gt;</span>GetValue<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">// Print out results</span>
  <span class="co1">//</span>
  std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot;Result = &quot;</span> <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
  std<span class="sy4">::</span><span class="kw3">cout</span> <span class="sy1">&lt;&lt;</span> <span class="st0">&quot; Metric value  = &quot;</span> <span class="sy1">&lt;&lt;</span> bestValue          <span class="sy1">&lt;&lt;</span> std<span class="sy4">::</span><span class="me2">endl</span><span class="sy4">;</span>
&#160;
  <span class="co1">//  It is common, as the last step of a registration task, to use the</span>
  <span class="co1">//  resulting transform to map the moving image into the fixed image space.</span>
  <span class="co1">//  This is easily done with the \doxygen{ResampleImageFilter}.</span>
&#160;
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">ResampleImageFilter</span><span class="sy1">&lt;</span>
      ImageType,
      ImageType <span class="sy1">&gt;</span>    ResampleFilterType<span class="sy4">;</span>
&#160;
  ResampleFilterType<span class="sy4">::</span><span class="me2">Pointer</span> resampler <span class="sy1">=</span> ResampleFilterType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  resampler<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span> movingImage<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">//  The Transform that is produced as output of the Registration method is</span>
  <span class="co1">//  also passed as input to the resampling filter. Note the use of the</span>
  <span class="co1">//  methods \code{GetOutput()} and \code{Get()}. This combination is needed</span>
  <span class="co1">//  here because the registration method acts as a filter whose output is a</span>
  <span class="co1">//  transform decorated in the form of a \doxygen{DataObject}. For details in</span>
  <span class="co1">//  this construction you may want to read the documentation of the</span>
  <span class="co1">//  \doxygen{DataObjectDecorator}.</span>
&#160;
  resampler<span class="sy2">-</span><span class="sy1">&gt;</span>SetTransform<span class="br0">&#40;</span> registration<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy2">-</span><span class="sy1">&gt;</span>Get<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">//  As described in Section \ref{sec:ResampleImageFilter}, the</span>
  <span class="co1">//  ResampleImageFilter requires additional parameters to be specified, in</span>
  <span class="co1">//  particular, the spacing, origin and size of the output image. The default</span>
  <span class="co1">//  pixel value is also set to a distinct gray level in order to highlight</span>
  <span class="co1">//  the regions that are mapped outside of the moving image.</span>
&#160;
  resampler<span class="sy2">-</span><span class="sy1">&gt;</span>SetSize<span class="br0">&#40;</span> fixedImage<span class="sy2">-</span><span class="sy1">&gt;</span>GetLargestPossibleRegion<span class="br0">&#40;</span><span class="br0">&#41;</span>.<span class="me1">GetSize</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  resampler<span class="sy2">-</span><span class="sy1">&gt;</span>SetOutputOrigin<span class="br0">&#40;</span>  fixedImage<span class="sy2">-</span><span class="sy1">&gt;</span>GetOrigin<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  resampler<span class="sy2">-</span><span class="sy1">&gt;</span>SetOutputSpacing<span class="br0">&#40;</span> fixedImage<span class="sy2">-</span><span class="sy1">&gt;</span>GetSpacing<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  resampler<span class="sy2">-</span><span class="sy1">&gt;</span>SetOutputDirection<span class="br0">&#40;</span> fixedImage<span class="sy2">-</span><span class="sy1">&gt;</span>GetDirection<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  resampler<span class="sy2">-</span><span class="sy1">&gt;</span>SetDefaultPixelValue<span class="br0">&#40;</span> <span class="nu0">100</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="co1">//  The output of the filter is passed to a writer that will store the</span>
  <span class="co1">//  image in a file. An \doxygen{CastImageFilter} is used to convert the</span>
  <span class="co1">//  pixel type of the resampled image to the final type used by the</span>
  <span class="co1">//  writer. The cast and writer filters are instantiated below.</span>
&#160;
  <span class="kw4">typedef</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> OutputPixelType<span class="sy4">;</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">Image</span><span class="sy1">&lt;</span> OutputPixelType, Dimension <span class="sy1">&gt;</span> OutputImageType<span class="sy4">;</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">CastImageFilter</span><span class="sy1">&lt;</span>
      ImageType,
      ImageType <span class="sy1">&gt;</span> CastFilterType<span class="sy4">;</span>
&#160;
  WriterType<span class="sy4">::</span><span class="me2">Pointer</span>      writer <span class="sy1">=</span>  WriterType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  CastFilterType<span class="sy4">::</span><span class="me2">Pointer</span>  caster <span class="sy1">=</span>  CastFilterType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  writer<span class="sy2">-</span><span class="sy1">&gt;</span>SetFileName<span class="br0">&#40;</span><span class="st0">&quot;output.png&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  caster<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span> resampler<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  writer<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span> caster<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span>   <span class="br0">&#41;</span><span class="sy4">;</span>
  writer<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="kw1">return</span> <span class="kw2">EXIT_SUCCESS</span><span class="sy4">;</span>
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> CreateEllipseImage<span class="br0">&#40;</span>ImageType<span class="sy4">::</span><span class="me2">Pointer</span> image<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">EllipseSpatialObject</span><span class="sy1">&lt;</span> Dimension <span class="sy1">&gt;</span>   EllipseType<span class="sy4">;</span>
&#160;
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">SpatialObjectToImageFilter</span><span class="sy1">&lt;</span>
    EllipseType, ImageType <span class="sy1">&gt;</span>   SpatialObjectToImageFilterType<span class="sy4">;</span>
&#160;
  SpatialObjectToImageFilterType<span class="sy4">::</span><span class="me2">Pointer</span> imageFilter <span class="sy1">=</span>
    SpatialObjectToImageFilterType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ImageType<span class="sy4">::</span><span class="me2">SizeType</span> size<span class="sy4">;</span>
  size<span class="br0">&#91;</span> <span class="nu0">0</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">100</span><span class="sy4">;</span>
  size<span class="br0">&#91;</span> <span class="nu0">1</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">100</span><span class="sy4">;</span>
&#160;
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetSize<span class="br0">&#40;</span> size <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ImageType<span class="sy4">::</span><span class="me2">SpacingType</span> spacing<span class="sy4">;</span>
  spacing.<span class="me1">Fill</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetSpacing<span class="br0">&#40;</span>spacing<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  EllipseType<span class="sy4">::</span><span class="me2">Pointer</span> ellipse    <span class="sy1">=</span> EllipseType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  EllipseType<span class="sy4">::</span><span class="me2">ArrayType</span> radiusArray<span class="sy4">;</span>
  radiusArray<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu0">10</span><span class="sy4">;</span>
  radiusArray<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu0">20</span><span class="sy4">;</span>
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetRadius<span class="br0">&#40;</span>radiusArray<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="kw4">typedef</span> EllipseType<span class="sy4">::</span><span class="me2">TransformType</span>                 TransformType<span class="sy4">;</span>
  TransformType<span class="sy4">::</span><span class="me2">Pointer</span> transform <span class="sy1">=</span> TransformType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  transform<span class="sy2">-</span><span class="sy1">&gt;</span>SetIdentity<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  TransformType<span class="sy4">::</span><span class="me2">OutputVectorType</span>  translation<span class="sy4">;</span>
  TransformType<span class="sy4">::</span><span class="me2">CenterType</span>        center<span class="sy4">;</span>
&#160;
  translation<span class="br0">&#91;</span> <span class="nu0">0</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">65</span><span class="sy4">;</span>
  translation<span class="br0">&#91;</span> <span class="nu0">1</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">45</span><span class="sy4">;</span>
  transform<span class="sy2">-</span><span class="sy1">&gt;</span>Translate<span class="br0">&#40;</span> translation, <span class="kw2">false</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetObjectToParentTransform<span class="br0">&#40;</span> transform <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span>ellipse<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetDefaultInsideValue<span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span><span class="sy4">;</span>
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetDefaultOutsideValue<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetUseObjectValue<span class="br0">&#40;</span> <span class="kw2">true</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetOutsideValue<span class="br0">&#40;</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  image<span class="sy2">-</span><span class="sy1">&gt;</span>Graft<span class="br0">&#40;</span>imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
<span class="br0">&#125;</span>
&#160;
<span class="kw4">void</span> CreateSphereImage<span class="br0">&#40;</span>ImageType<span class="sy4">::</span><span class="me2">Pointer</span> image<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
 <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">EllipseSpatialObject</span><span class="sy1">&lt;</span> Dimension <span class="sy1">&gt;</span>   EllipseType<span class="sy4">;</span>
&#160;
  <span class="kw4">typedef</span> itk<span class="sy4">::</span><span class="me2">SpatialObjectToImageFilter</span><span class="sy1">&lt;</span>
    EllipseType, ImageType <span class="sy1">&gt;</span>   SpatialObjectToImageFilterType<span class="sy4">;</span>
&#160;
  SpatialObjectToImageFilterType<span class="sy4">::</span><span class="me2">Pointer</span> imageFilter <span class="sy1">=</span>
    SpatialObjectToImageFilterType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ImageType<span class="sy4">::</span><span class="me2">SizeType</span> size<span class="sy4">;</span>
  size<span class="br0">&#91;</span> <span class="nu0">0</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">100</span><span class="sy4">;</span>
  size<span class="br0">&#91;</span> <span class="nu0">1</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">100</span><span class="sy4">;</span>
&#160;
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetSize<span class="br0">&#40;</span> size <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ImageType<span class="sy4">::</span><span class="me2">SpacingType</span> spacing<span class="sy4">;</span>
  spacing.<span class="me1">Fill</span><span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetSpacing<span class="br0">&#40;</span>spacing<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  EllipseType<span class="sy4">::</span><span class="me2">Pointer</span> ellipse    <span class="sy1">=</span> EllipseType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  EllipseType<span class="sy4">::</span><span class="me2">ArrayType</span> radiusArray<span class="sy4">;</span>
  radiusArray<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu0">10</span><span class="sy4">;</span>
  radiusArray<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu0">10</span><span class="sy4">;</span>
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetRadius<span class="br0">&#40;</span>radiusArray<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  <span class="kw4">typedef</span> EllipseType<span class="sy4">::</span><span class="me2">TransformType</span>                 TransformType<span class="sy4">;</span>
  TransformType<span class="sy4">::</span><span class="me2">Pointer</span> transform <span class="sy1">=</span> TransformType<span class="sy4">::</span><span class="me2">New</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
  transform<span class="sy2">-</span><span class="sy1">&gt;</span>SetIdentity<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  TransformType<span class="sy4">::</span><span class="me2">OutputVectorType</span>  translation<span class="sy4">;</span>
  TransformType<span class="sy4">::</span><span class="me2">CenterType</span>        center<span class="sy4">;</span>
&#160;
  translation<span class="br0">&#91;</span> <span class="nu0">0</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">50</span><span class="sy4">;</span>
  translation<span class="br0">&#91;</span> <span class="nu0">1</span> <span class="br0">&#93;</span> <span class="sy1">=</span>  <span class="nu0">50</span><span class="sy4">;</span>
  transform<span class="sy2">-</span><span class="sy1">&gt;</span>Translate<span class="br0">&#40;</span> translation, <span class="kw2">false</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetObjectToParentTransform<span class="br0">&#40;</span> transform <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetInput<span class="br0">&#40;</span>ellipse<span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetDefaultInsideValue<span class="br0">&#40;</span><span class="nu0">255</span><span class="br0">&#41;</span><span class="sy4">;</span>
  ellipse<span class="sy2">-</span><span class="sy1">&gt;</span>SetDefaultOutsideValue<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetUseObjectValue<span class="br0">&#40;</span> <span class="kw2">true</span> <span class="br0">&#41;</span><span class="sy4">;</span>
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>SetOutsideValue<span class="br0">&#40;</span> <span class="nu0">0</span> <span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>Update<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy4">;</span>
&#160;
  image<span class="sy2">-</span><span class="sy1">&gt;</span>Graft<span class="br0">&#40;</span>imageFilter<span class="sy2">-</span><span class="sy1">&gt;</span>GetOutput<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
<span class="br0">&#125;</span></pre></div></div>
<h2><span class="mw-headline" id="CMakeLists.txt">CMakeLists.txt</span></h2>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="cmake source-cmake"><pre class="de1"><span class="kw1">cmake_minimum_required</span><span class="sy0">(</span><span class="kw3">VERSION</span> 2.8<span class="sy0">)</span>
&#160;
<span class="kw1">project</span><span class="sy0">(</span>ImageRegistrationMethodAffine<span class="sy0">)</span>
&#160;
<span class="kw1">find_package</span><span class="sy0">(</span>ITK REQUIRED<span class="sy0">)</span>
<span class="kw1">include</span><span class="sy0">(</span><span class="re0">${ITK_USE_FILE}</span><span class="sy0">)</span>
<span class="kw1">if</span> <span class="sy0">(</span>ITKVtkGlue_LOADED<span class="sy0">)</span>
  <span class="kw1">find_package</span><span class="sy0">(</span>VTK REQUIRED<span class="sy0">)</span>
  <span class="kw1">include</span><span class="sy0">(</span><span class="re0">${VTK_USE_FILE}</span><span class="sy0">)</span>
<span class="kw1">endif</span><span class="sy0">()</span>
&#160;
<span class="kw1">add_executable</span><span class="sy0">(</span>ImageRegistrationMethodAffine MACOSX_BUNDLE ImageRegistrationMethodAffine.cxx<span class="sy0">)</span>
&#160;
<span class="kw1">if</span><span class="sy0">(</span> <span class="st0">&quot;<span class="es1">${ITK_VERSION_MAJOR}</span>&quot;</span> <span class="kw3">LESS</span> 4 <span class="sy0">)</span>
  <span class="kw1">target_link_libraries</span><span class="sy0">(</span>ImageRegistrationMethodAffine ITKReview <span class="re0">${ITK_LIBRARIES}</span><span class="sy0">)</span>
<span class="kw1">else</span><span class="sy0">(</span> <span class="st0">&quot;<span class="es1">${ITK_VERSION_MAJOR}</span>&quot;</span> <span class="kw3">LESS</span> 4 <span class="sy0">)</span>
  <span class="kw1">target_link_libraries</span><span class="sy0">(</span>ImageRegistrationMethodAffine <span class="re0">${ITK_LIBRARIES}</span><span class="sy0">)</span>
<span class="kw1">endif</span><span class="sy0">(</span> <span class="st0">&quot;<span class="es1">${ITK_VERSION_MAJOR}</span>&quot;</span> <span class="kw3">LESS</span> 4 <span class="sy0">)</span></pre></div></div>
<h2><span class="mw-headline" id="Download_and_Build_ImageRegistrationMethodAffine">Download and Build ImageRegistrationMethodAffine</span></h2>
<p>Click <a rel="nofollow" class="external text" href="https://github.com/lorensen/ITKWikiExamplesTarballs/raw/master/ImageRegistrationMethodAffine.tar">here to download <i>ImageRegistrationMethodAffine</i></a> and its <i>CMakeLists.txt</i> file.
Once the tarball <i>ImageRegistrationMethodAffine.tar</i> has been downloaded and extracted,
</p>
<pre>cd ImageRegistrationMethodAffine/build
</pre>
<ul>
<li> If ITK is installed:
</li>
</ul>
<pre>cmake ..
</pre>
<ul>
<li> If ITK is not installed but compiled on your system, you will need to specify <b>the path to your ITK build</b>:
</li>
</ul>
<pre>cmake -DITK_DIR:PATH=<b>/home/me/itk_build</b> ..
</pre>
<p>Build the project:
</p>
<pre>make
</pre>
<p>and run it:
</p>
<pre>./ImageRegistrationMethodAffine
</pre>
<p><b>WINDOWS USERS PLEASE NOTE:</b> Be sure to add the ITK bin directory to your path. This will resolve the ITK dll's at run time.
</p>
<h2><span class="mw-headline" id="Building_All_of_the_Examples">Building All of the Examples</span></h2>
<p>Many of the examples in the ITK Wiki Examples Collection require VTK. You can build all of the the examples by following <a href="/Wiki/ITK/Examples/Instructions/ForUsers#Build_all_of_the_examples" title="ITK/Examples/Instructions/ForUsers">these instructions</a>. If you are a new VTK user, you may want to try the <a href="/Wiki/ITK/Examples/Instructions/ForUsers#Use_the_Superbuild_to_build_a_proper_VTK_and_ITK" title="ITK/Examples/Instructions/ForUsers">Superbuild</a> which will build a proper ITK and VTK.
</p>
<h2><span class="mw-headline" id="ItkVtkGlue">ItkVtkGlue</span></h2>
<h3><span class="mw-headline" id="ITK_.3E.3D_4">ITK &gt;= 4</span></h3>
<p>For examples that use QuickView (which depends on VTK), you must have built ITK with Module_ITKVtkGlue=ON.
</p>
<h3><span class="mw-headline" id="ITK_.3C_4">ITK &lt; 4</span></h3>
<p>Some of the ITK Examples require VTK to display the images. If you download the entire ITK Wiki Examples Collection, the ItkVtkGlue directory will be included and configured. If you wish to just build a few examples, then you will need to <a rel="nofollow" class="external text" href="https://github.com/InsightSoftwareConsortium/ITKWikiExamples/raw/master/ItkVtkGlue.tar.gz">download ItkVtkGlue</a> and build it. When you run cmake it will ask you to specify the location of the ItkVtkGlue binary directory.
</p>
<!-- 
NewPP limit report
CPU time usage: 0.108 seconds
Real time usage: 0.112 seconds
Preprocessor visited node count: 30/1000000
Preprocessor generated node count: 127/1000000
Post‐expand include size: 2154/2097152 bytes
Template argument size: 319/2097152 bytes
Highest expansion depth: 3/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key KitwarePublicWikiDB:pcache:idhash:8563-0!*!0!!en!*!* and timestamp 20160422133122 and revision id 50977
 -->
</div><div class="printfooter">
Retrieved from "<a href="http://itk.org/Wiki/index.php?title=ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;oldid=50977">http://itk.org/Wiki/index.php?title=ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;oldid=50977</a>"</div>
		<div id='catlinks' class='catlinks catlinks-allhidden'></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div id="column-one">
	<h2>Navigation menu</h2>
	<div id="p-cactions" class="portlet" role="navigation">
		<h3>Views</h3>
		<div class="pBody">
			<ul>
				<li id="ca-nstab-main" class="selected"><a href="/Wiki/ITK/Examples/Registration/ImageRegistrationMethodAffine" title="View the content page [c]" accesskey="c">Page</a></li>
				<li id="ca-talk" class="new"><a href="/Wiki/index.php?title=Talk:ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;action=edit&amp;redlink=1" title="Discussion about the content page [t]" accesskey="t">Discussion</a></li>
				<li id="ca-viewsource"><a href="/Wiki/index.php?title=ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li>
				<li id="ca-history"><a href="/Wiki/index.php?title=ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;action=history" rel="archives" title="Past revisions of this page [h]" accesskey="h">History</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal" role="navigation">
		<h3>Personal tools</h3>
		<div class="pBody">
			<ul>
				<li id="pt-login"><a href="/Wiki/index.php?title=Special:UserLogin&amp;returnto=ITK%2FExamples%2FRegistration%2FImageRegistrationMethodAffine" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
				<li id="pt-createaccount"><a href="/Wiki/Special:RequestAccount">Request account</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo" role="banner">
<a href="/Wiki/Main_Page" style="background-image: url(/Wiki/images/KWLogo.png);" title="Visit the main page"></a>
	</div>
	<div class="generated-sidebar portlet" id="p-navigation" role="navigation">
		<h3>Navigation</h3>
		<div class='pBody'>
			<ul>
				<li id="n-mainpage-description"><a href="/Wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li>
				<li id="n-recentchanges"><a href="/Wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li>
				<li id="n-randompage"><a href="/Wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li>
				<li id="n-help"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents" title="The place to find out">Help</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet" role="search">
		<h3><label for="searchInput">Search</label></h3>
		<div id="searchBody" class="pBody">
			<form action="/Wiki/index.php" id="searchform">
				<input type='hidden' name="title" value="Special:Search"/>
				<input type="search" name="search" placeholder="Search" title="Search KitwarePublic [f]" accesskey="f" id="searchInput" />
				<input type="submit" name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" />&#160;
				<input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" />
			</form>

					</div>
	</div>
	<div class="portlet" id="p-tb" role="navigation">
		<h3>Tools</h3>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="/Wiki/Special:WhatLinksHere/ITK/Examples/Registration/ImageRegistrationMethodAffine" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="/Wiki/Special:RecentChangesLinked/ITK/Examples/Registration/ImageRegistrationMethodAffine" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li>
				<li id="t-specialpages"><a href="/Wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li>
				<li id="t-permalink"><a href="/Wiki/index.php?title=ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;oldid=50977" title="Permanent link to this revision of the page">Permanent link</a></li>
				<li id="t-info"><a href="/Wiki/index.php?title=ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;action=info">Page information</a></li>
			</ul>
		</div>
	</div>
	<div class="generated-sidebar portlet" id="p-coll-print_export" role="navigation">
		<h3>Print/export</h3>
		<div class='pBody'>
			<ul>
				<li id="coll-create_a_book"><a href="/Wiki/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=ITK%2FExamples%2FRegistration%2FImageRegistrationMethodAffine">Create a book</a></li>
				<li id="coll-download-as-rl"><a href="/Wiki/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=ITK%2FExamples%2FRegistration%2FImageRegistrationMethodAffine&amp;oldid=50977&amp;writer=rl">Download as PDF</a></li>
				<li id="t-print"><a href="/Wiki/index.php?title=ITK/Examples/Registration/ImageRegistrationMethodAffine&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>
			</ul>
		</div>
	</div>
</div><!-- end of the left (by default at least) column -->
<div class="visualClear"></div>
<div id="footer" role="contentinfo">
	<div id="f-copyrightico">
		<a href="https://creativecommons.org/licenses/by/2.5/"><img src="https://creativecommons.org/images/public/somerights20.png" alt="Attribution2.5" width="88" height="31" /></a>
	</div>
	<div id="f-poweredbyico">
		<a href="//www.mediawiki.org/"><img src="/Wiki/skins/common/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" width="88" height="31" /></a>
	</div>
	<ul id="f-list">
		<li id="lastmod"> This page was last modified on 25 December 2012, at 13:26.</li>
		<li id="viewcount">This page has been accessed 7,424 times.</li>
		<li id="copyright">Content is available under <a class="external" rel="nofollow" href="https://creativecommons.org/licenses/by/2.5/">Attribution2.5</a> unless otherwise noted.</li>
		<li id="privacy"><a href="/Wiki/KitwarePublic:Privacy_policy" title="KitwarePublic:Privacy policy">Privacy policy</a></li>
		<li id="about"><a href="/Wiki/KitwarePublic:About" title="KitwarePublic:About">About KitwarePublic</a></li>
		<li id="disclaimer"><a href="/Wiki/KitwarePublic:General_disclaimer" title="KitwarePublic:General disclaimer">Disclaimers</a></li>
	</ul>
</div>
</div>
<script>/*<![CDATA[*/window.jQuery && jQuery.ready();/*]]>*/</script><script>if(window.mw){
mw.loader.state({"site":"ready","user":"ready","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.action.view.postEdit","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.searchSuggest"],null,true);
}</script>
<script>if(window.mw){
mw.config.set({"wgBackendResponseTime":486});
}</script></body></html>