<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>ITK/Using ITK from .NET - KitwarePublic</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":!1,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"dc68b5172ac0354bc1b1f357","wgCSPNonce":!1,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":!1,"wgNamespaceNumber":0,"wgPageName":"ITK/Using_ITK_from_.NET","wgTitle":"ITK/Using ITK from .NET","wgCurRevisionId":49483,"wgRevisionId":49483,"wgArticleId":10963,"wgIsArticle":!0,"wgIsRedirect":!1,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"ITK/Using_ITK_from_.NET","wgRelevantArticleId":10963,"wgIsProbablyEditable":!1,"wgRelevantPageIsProbablyEditable":!1,"wgRestrictionEdit":[],"wgRestrictionMove":[]};RLSTATE={"site.styles":"ready","noscript":
"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.monobook.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","skins.monobook.scripts"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@1hzgi",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
});});</script>
<link rel="stylesheet" href="/Wiki/load.php?lang=en&amp;modules=ext.pygments%7Cskins.monobook.styles&amp;only=styles&amp;skin=monobook"/>
<script async="" src="/Wiki/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=monobook"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/Wiki/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=monobook"/>
<meta name="generator" content="MediaWiki 1.37.1"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.25, maximum-scale=5.0"/>
<link rel="shortcut icon" href="/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/Wiki/opensearch_desc.php" title="KitwarePublic (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="https://public.kitware.com/Wiki/api.php?action=rsd"/>
<link rel="license" href="https://creativecommons.org/licenses/by/2.5/"/>
<link rel="alternate" type="application/atom+xml" title="KitwarePublic Atom feed" href="/Wiki/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-ITK_Using_ITK_from_NET rootpage-ITK skin-monobook action-view skin--responsive"><div id="globalWrapper">
	<div id="column-content">
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="siteNotice"></div>
			<div class="mw-indicators">
			</div>
			<h1 id="firstHeading" class="firstHeading"
				>ITK/Using ITK from .NET</h1>
			<div id="bodyContent" class="monobook-body">
				<div id="siteSub">From KitwarePublic</div>
				<div id="contentSub" ><span class="subpages">&lt; <a href="/Wiki/ITK" title="ITK">ITK</a></span></div>
				
				<div id="jump-to-nav"></div><a href="#column-one" class="mw-jump-link">Jump to navigation</a><a href="#searchInput" class="mw-jump-link">Jump to search</a>
				<!-- start content -->
				<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><p>This page describes how to use ITK from .NET.
<br />
<b>NOTE: You must build ITK, wrapper DLL, and .NET exe all using the same target platform i.e. Win32/x86 or Win64/x64</b>
</p>
<ol>
<li>
Download <a rel="nofollow" class="external text" href="http://www.cmake.org/cmake/resources/software.html">CMake</a>, <a rel="nofollow" class="external text" href="http://www.itk.org/ITK/resources/software.html">ITK source code</a>, and <a rel="nofollow" class="external text" href="http://www.swig.org/download.html">SWIG</a>
</li>
<li>
Build ITK (see <a rel="nofollow" class="external text" href="http://www.itk.org/ITK/help/tutorials.html">here</a> for help)
</li>
<li>
Create the following <code style="font-size: medium">CMakeLists.txt</code> file:
<div style="background: white; border: 1px dashed rgb(100, 100, 100); padding: 5px; margin: 10px 0px 10px 0px; font-size: medium">
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="c"># File: CMakeLists.txt</span>
<span class="err">cmake_minimum_required(VERSION</span> <span class="err">2.8)</span>

<span class="err">project(ExampleWrapper)</span>

<span class="err">find_package(ITK</span> <span class="err">REQUIRED)</span>
<span class="err">include(${ITK_USE_FILE})</span>

<span class="err">add_library(ExampleWrapper</span> <span class="err">SHARED</span> <span class="err">example.h</span> <span class="err">example.hxx</span> <span class="err">example_wrap.cxx)</span>
<span class="err">target_link_libraries(ExampleWrapper</span> <span class="err">${ITK_LIBRARIES})</span>
</pre></div>
</div>
</li>
<li>
Create the following <code style="font-size: medium">example.h</code> file:
<div style="background: white; border: 1px dashed rgb(100, 100, 100); padding: 5px; margin: 10px 0px 10px 0px; font-size: medium">
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">// File&#160;: example.h</span>
<span class="cp">#ifndef __example_h</span>
<span class="cp">#define __example_h</span>

<span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp"></span>

<span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">TPixel</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">VDimension</span><span class="o">&gt;</span>
<span class="kt">void</span> <span class="n">SmoothImage</span><span class="p">(</span>
    <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">input</span><span class="p">,</span> <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">output</span><span class="p">,</span> <span class="k">const</span> <span class="kt">double</span> <span class="n">sigma</span>
<span class="p">);</span>

<span class="cp">#include</span> <span class="cpf">&quot;example.hxx&quot;</span><span class="cp"></span>

<span class="cp">#endif </span><span class="c1">// __example_h</span>
</pre></div>
</div>
</li>
<li>
Create the following <code style="font-size: medium">example.hxx</code> file:
<div style="background: white; border: 1px dashed rgb(100, 100, 100); padding: 5px; margin: 10px 0px 10px 0px; font-size: medium">
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="cp">#ifndef __example_hxx</span>
<span class="cp">#define __example_hxx</span>

<span class="cp">#include</span> <span class="cpf">&quot;example.h&quot;</span><span class="cp"></span>

<span class="cp">#include</span> <span class="cpf">&quot;itkImage.h&quot;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&quot;itkImageFileReader.h&quot;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&quot;itkImageFileWriter.h&quot;</span><span class="cp"></span>
<span class="cp">#include</span> <span class="cpf">&quot;itkSmoothingRecursiveGaussianImageFilter.h&quot;</span><span class="cp"></span>

<span class="k">template</span><span class="o">&lt;</span><span class="k">class</span> <span class="nc">TPixel</span><span class="p">,</span> <span class="kt">unsigned</span> <span class="kt">int</span> <span class="n">VDimension</span><span class="o">&gt;</span>
<span class="kt">void</span> <span class="n">SmoothImage</span><span class="p">(</span>
    <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">input</span><span class="p">,</span> <span class="k">const</span> <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">output</span><span class="p">,</span> <span class="k">const</span> <span class="kt">double</span> <span class="n">sigma</span>
<span class="p">)</span> <span class="p">{</span>
    <span class="c1">// Read input</span>
    <span class="k">typedef</span> <span class="n">itk</span><span class="o">::</span><span class="n">Image</span><span class="o">&lt;</span><span class="n">TPixel</span><span class="p">,</span><span class="n">VDimension</span><span class="o">&gt;</span> <span class="n">ImageType</span><span class="p">;</span>
    <span class="k">typedef</span> <span class="n">itk</span><span class="o">::</span><span class="n">ImageFileReader</span><span class="o">&lt;</span><span class="n">ImageType</span><span class="o">&gt;</span> <span class="n">ReaderType</span><span class="p">;</span>
    <span class="n">ReaderType</span><span class="o">::</span><span class="n">Pointer</span> <span class="n">reader</span> <span class="o">=</span> <span class="n">ReaderType</span><span class="o">::</span><span class="n">New</span><span class="p">();</span>
    <span class="n">reader</span><span class="o">-&gt;</span><span class="n">SetFileName</span><span class="p">(</span><span class="n">input</span><span class="p">);</span>
    <span class="n">reader</span><span class="o">-&gt;</span><span class="n">Update</span><span class="p">();</span>

    <span class="c1">// Apply filter</span>
    <span class="k">typedef</span> <span class="n">itk</span><span class="o">::</span><span class="n">SmoothingRecursiveGaussianImageFilter</span><span class="o">&lt;</span><span class="n">ImageType</span><span class="o">&gt;</span> <span class="n">FilterType</span><span class="p">;</span>
    <span class="n">FilterType</span><span class="o">::</span><span class="n">Pointer</span> <span class="n">filter</span> <span class="o">=</span> <span class="n">FilterType</span><span class="o">::</span><span class="n">New</span><span class="p">();</span>
    <span class="n">filter</span><span class="o">-&gt;</span><span class="n">SetInput</span><span class="p">(</span><span class="n">reader</span><span class="o">-&gt;</span><span class="n">GetOutput</span><span class="p">());</span>
    <span class="n">filter</span><span class="o">-&gt;</span><span class="n">SetSigma</span><span class="p">(</span><span class="n">sigma</span><span class="p">);</span>
    <span class="n">filter</span><span class="o">-&gt;</span><span class="n">Update</span><span class="p">();</span>

    <span class="c1">// Write output</span>
    <span class="k">typedef</span> <span class="n">itk</span><span class="o">::</span><span class="n">ImageFileWriter</span><span class="o">&lt;</span><span class="n">ImageType</span><span class="o">&gt;</span> <span class="n">WriterType</span><span class="p">;</span>
    <span class="n">WriterType</span><span class="o">::</span><span class="n">Pointer</span> <span class="n">writer</span> <span class="o">=</span> <span class="n">WriterType</span><span class="o">::</span><span class="n">New</span><span class="p">();</span>
    <span class="n">writer</span><span class="o">-&gt;</span><span class="n">SetInput</span><span class="p">(</span><span class="n">filter</span><span class="o">-&gt;</span><span class="n">GetOutput</span><span class="p">());</span>
    <span class="n">writer</span><span class="o">-&gt;</span><span class="n">SetFileName</span><span class="p">(</span><span class="n">output</span><span class="p">);</span>
    <span class="n">writer</span><span class="o">-&gt;</span><span class="n">Update</span><span class="p">();</span>
<span class="p">}</span>

<span class="cp">#endif </span><span class="c1">// __example_hxx</span>
</pre></div>
</div>
</li>
<li>
Create the following <code style="font-size: medium">example.i</code> file (instructs SWIG how to generate the wrapper):
<div style="background: white; border: 1px dashed rgb(100, 100, 100); padding: 5px; margin: 10px 0px 10px 0px; font-size: medium">
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">// File&#160;: example.i</span>
<span class="o">%</span><span class="n">module</span> <span class="n">example</span>
<span class="o">%</span><span class="n">include</span> <span class="s">&quot;std_string.i&quot;</span>

<span class="o">%</span><span class="p">{</span>
<span class="cp">#include</span> <span class="cpf">&quot;example.h&quot;</span><span class="cp"></span>
<span class="o">%</span><span class="p">}</span>

<span class="o">%</span><span class="n">include</span> <span class="s">&quot;example.h&quot;</span>

<span class="o">%</span><span class="k">template</span><span class="p">(</span><span class="n">SmoothImageUC2</span><span class="p">)</span><span class="n">SmoothImage</span><span class="o">&lt;</span><span class="kt">unsigned</span> <span class="kt">char</span><span class="p">,</span> <span class="mi">2</span><span class="o">&gt;</span><span class="p">;</span>
<span class="o">%</span><span class="k">template</span><span class="p">(</span><span class="n">SmoothImageF2</span><span class="p">)</span> <span class="n">SmoothImage</span><span class="o">&lt;</span><span class="kt">float</span><span class="p">,</span> <span class="mi">2</span><span class="o">&gt;</span><span class="p">;</span>
</pre></div>
</div>
</li>
<li>
Run SWIG using the following command: <code style="font-size: medium">swig -c++ -csharp -dllimport ExampleWrapper example.i</code>
<br />
The following files should be generated:
<ul><li><code style="font-size: medium">example_wrap.cxx</code></li>
<li><code style="font-size: medium">example.cs</code></li>
<li><code style="font-size: medium">examplePINVOKE.cs</code></li></ul>
</li>
<li>
Run CMake, configure and generate, build the project. The result should be <code style="font-size: medium">ExampleWrapper.dll</code>
</li>
<li>
Create the following C# <code style="font-size: medium">runme.cs</code> file:
<div style="background: white; border: 1px dashed rgb(100, 100, 100); padding: 5px; margin: 10px 0px 10px 0px; font-size: medium">
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">// File: runme.cs</span>
<span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">public</span> <span class="k">class</span> <span class="nc">runme</span> <span class="p">{</span>
<span class="na">    [STAThread()]</span>
    <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">try</span> <span class="p">{</span>
            <span class="n">example</span><span class="p">.</span><span class="n">SmoothImageUC2</span><span class="p">(</span>
                <span class="n">input</span><span class="p">:</span> <span class="s">&quot;C:/Temp/cthead1.png&quot;</span><span class="p">,</span>
                <span class="n">output</span><span class="p">:</span> <span class="s">&quot;C:/Temp/cthead1-smooth.png&quot;</span><span class="p">,</span>
                <span class="n">sigma</span><span class="p">:</span> <span class="m">5.0</span>
            <span class="p">);</span>
        <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">ex</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">ex</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></div>
</div>
</li>
<li>
Build the .NET executable. For Mono use the following: <code style="font-size: medium">mcs -platform:x86 -target:exe -out:example.exe runme.cs example.cs examplePINVOKE.cs</code>
</li>
<li>
Run the .NET executable. Make sure it can find <code style="font-size: medium">ExampleWrapper.dll</code> (the easiest way is to copy the dll to the same folder as <code style="font-size: medium">example.exe</code>)
</li>
</ol>
<!-- 
NewPP limit report
Cached time: 20220528200921
Cache expiry: 86400
Reduced expiry: false
Complications: []
CPU time usage: 0.024 seconds
Real time usage: 0.898 seconds
Preprocessor visited node count: 34/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 10179/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key KitwarePublicWikiDB:pcache:idhash:10963-0!canonical and timestamp 20220528200920 and revision id 49483. Serialized with JSON.
 -->
</div>
<div class="printfooter">Retrieved from "<a dir="ltr" href="https://public.kitware.com/Wiki/index.php?title=ITK/Using_ITK_from_.NET&amp;oldid=49483">https://public.kitware.com/Wiki/index.php?title=ITK/Using_ITK_from_.NET&amp;oldid=49483</a>"</div></div>
				<div id="catlinks" class="catlinks catlinks-allhidden" data-mw="interface"></div>
				<!-- end content -->
				<div class="visualClear"></div>
			</div>
		</div>
		<div class="visualClear"></div>
	</div>
	<div id="column-one" >
		<h2>Navigation menu</h2>
		<div role="navigation" class="portlet" id="p-cactions" aria-labelledby="p-cactions-label">
			<h3 id="p-cactions-label" >Page actions</h3>
			<div class="pBody">
				<ul >
				<li id="ca-nstab-main" class="selected mw-list-item"><a href="/Wiki/ITK/Using_ITK_from_.NET" title="View the content page [c]" accesskey="c">Page</a></li><li id="ca-talk" class="new mw-list-item"><a href="/Wiki/index.php?title=Talk:ITK/Using_ITK_from_.NET&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t">Discussion</a></li><li id="ca-view" class="selected mw-list-item"><a href="/Wiki/ITK/Using_ITK_from_.NET">View</a></li><li id="ca-viewsource" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Using_ITK_from_.NET&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li><li id="ca-history" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Using_ITK_from_.NET&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li>
				
				</ul>
			</div>
		</div>
		<div role="navigation" class="portlet mw-portlet mw-portlet-cactions-mobile"
	id="p-cactions-mobile" aria-labelledby="p-cactions-mobile-label">
	<h3 id="p-cactions-mobile-label" >Page actions</h3>
	<div class="pBody">
		<ul ><li id="main-mobile" class="selected mw-list-item"><a href="/Wiki/ITK/Using_ITK_from_.NET" title="Page">Page</a></li><li id="talk-mobile" class="new mw-list-item"><a href="/Wiki/index.php?title=Talk:ITK/Using_ITK_from_.NET&amp;action=edit&amp;redlink=1" title=" (page does not exist)">Discussion</a></li><li id="ca-more" class="mw-list-item"><a href="#p-cactions">More</a></li><li id="ca-tools" class="mw-list-item"><a href="#p-tb" title="Tools">Tools</a></li></ul>
		
	</div>
</div>

		<div role="navigation" class="portlet" id="p-personal" aria-labelledby="p-personal-label">
			<h3 id="p-personal-label" >Personal tools</h3>
			<div class="pBody">
				<ul >
				<li id="pt-login" class="mw-list-item"><a href="/Wiki/index.php?title=Special:UserLogin&amp;returnto=ITK%2FUsing+ITK+from+.NET" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
				</ul>
			</div>
		</div>
		<div class="portlet" id="p-logo" role="banner">
			<a href="/Wiki/Main_Page" class="mw-wiki-logo"></a>
		</div>
		<div id="sidebar">
		<div role="navigation" class="portlet mw-portlet mw-portlet-navigation"
	id="p-navigation" aria-labelledby="p-navigation-label">
	<h3 id="p-navigation-label" >Navigation</h3>
	<div class="pBody">
		<ul ><li id="n-mainpage-description" class="mw-list-item"><a href="/Wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-recentchanges" class="mw-list-item"><a href="/Wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-randompage" class="mw-list-item"><a href="/Wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li><li id="n-help-mediawiki" class="mw-list-item"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents">Help about MediaWiki</a></li></ul>
		
	</div>
</div>

		<div role="search" class="portlet" id="p-search">
			<h3 id="p-search-label" dir="ltr" lang="en-GB"><label for="searchInput">Search</label></h3>
			<div class="pBody" id="searchBody">
				<form action="/Wiki/index.php" id="searchform"><input type="hidden" value="Special:Search" name="title"><input type="search" name="search" placeholder="Search KitwarePublic" autocapitalize="sentences" title="Search KitwarePublic [f]" accesskey="f" id="searchInput"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/> <input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/></form>
			</div>
		</div>
		<div role="navigation" class="portlet mw-portlet mw-portlet-tb"
	id="p-tb" aria-labelledby="p-tb-label">
	<h3 id="p-tb-label" >Tools</h3>
	<div class="pBody">
		<ul ><li id="t-whatlinkshere" class="mw-list-item"><a href="/Wiki/Special:WhatLinksHere/ITK/Using_ITK_from_.NET" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/Wiki/Special:RecentChangesLinked/ITK/Using_ITK_from_.NET" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-specialpages" class="mw-list-item"><a href="/Wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li><li id="t-permalink" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Using_ITK_from_.NET&amp;oldid=49483" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Using_ITK_from_.NET&amp;action=info" title="More information about this page">Page information</a></li></ul>
		
	</div>
</div>

		
		</div>
		<a href="#sidebar" title="Jump to navigation"
			class="menu-toggle" id="sidebar-toggle"></a>
		<a href="#p-personal" title="user tools"
			class="menu-toggle" id="p-personal-toggle"></a>
		<a href="#globalWrapper" title="back to top"
			class="menu-toggle" id="globalWrapper-toggle"></a>
	</div>
	<!-- end of the left (by default at least) column -->
	<div class="visualClear"></div>
	<div id="footer" class="mw-footer" role="contentinfo"
		>
		<div id="f-copyrightico" class="footer-icons">
			<a href="https://creativecommons.org/licenses/by/2.5/"><img src="https://creativecommons.org/images/public/somerights20.png" alt="Attribution2.5" width="88" height="31" loading="lazy"/></a>
		</div>
		<div id="f-poweredbyico" class="footer-icons">
			<a href="https://www.mediawiki.org/"><img src="/Wiki/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/Wiki/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /Wiki/resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a>
		</div>
		<ul id="f-list">
			<li id="lastmod"> This page was last edited on 27 November 2012, at 23:29.</li><li id="copyright">Content is available under <a class="external" rel="nofollow" href="https://creativecommons.org/licenses/by/2.5/">Attribution2.5</a> unless otherwise noted.</li>
			<li id="privacy"><a href="/Wiki/KitwarePublic:Privacy_policy" title="KitwarePublic:Privacy policy">Privacy policy</a></li><li id="about"><a href="/Wiki/KitwarePublic:About" title="KitwarePublic:About">About KitwarePublic</a></li><li id="disclaimer"><a href="/Wiki/KitwarePublic:General_disclaimer" title="KitwarePublic:General disclaimer">Disclaimers</a></li>
		</ul>
	</div>
</div>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.024","walltime":"0.898","ppvisitednodes":{"value":34,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":40},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":10179,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20220528200921","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":86});});</script>
</body></html>