<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering 2D - KitwarePublic</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":false,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"c96314b7baf1bcdea8a0b044","wgCSPNonce":false,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D","wgTitle":"ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering 2D","wgCurRevisionId":49493,"wgRevisionId":49493,"wgArticleId":8095,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D","wgRelevantArticleId":8095,"wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,
"wgRestrictionEdit":[],"wgRestrictionMove":[]};RLSTATE={"site.styles":"ready","user.styles":"ready","user":"ready","user.options":"loading","skins.monobook.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.monobook.scripts"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@1i9g4",function($,jQuery,require,module){mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});});});</script>
<link rel="stylesheet" href="/Wiki/load.php?lang=en&amp;modules=skins.monobook.styles&amp;only=styles&amp;skin=monobook"/>
<script async="" src="/Wiki/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=monobook"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/Wiki/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=monobook"/>
<meta name="generator" content="MediaWiki 1.38.6"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.25, maximum-scale=5.0"/>
<link rel="shortcut icon" href="/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/Wiki/opensearch_desc.php" title="KitwarePublic (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="https://public.kitware.com/Wiki/api.php?action=rsd"/>
<link rel="license" href="https://creativecommons.org/licenses/by/2.5/"/>
<link rel="alternate" type="application/atom+xml" title="KitwarePublic Atom feed" href="/Wiki/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-ITK_ExamplesBoneyard_KdTreeBasedKMeansClustering_2D rootpage-ITK skin-monobook action-view skin--responsive"><div id="globalWrapper">
	<div id="column-content">
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="siteNotice"></div>
			<div class="mw-indicators">
			</div>
			<h1 id="firstHeading" class="firstHeading mw-first-heading">ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering 2D</h1>
			<div id="bodyContent" class="monobook-body">
				<div id="siteSub">From KitwarePublic</div>
				<div id="contentSub" ><span class="subpages">&lt; <a href="/Wiki/ITK" title="ITK">ITK</a></span></div>
				
				<div id="jump-to-nav"></div><a href="#column-one" class="mw-jump-link">Jump to navigation</a><a href="#searchInput" class="mw-jump-link">Jump to search</a>
				<!-- start content -->
				<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1 tocsection-2"><a href="#ITK_Classes_Demonstrated"><span class="tocnumber">2</span> <span class="toctext">ITK Classes Demonstrated</span></a></li>
<li class="toclevel-1 tocsection-3"><a href="#Output"><span class="tocnumber">3</span> <span class="toctext">Output</span></a></li>
<li class="toclevel-1 tocsection-4"><a href="#KdTreeBasedKMeansClustering_2D.cxx"><span class="tocnumber">4</span> <span class="toctext">KdTreeBasedKMeansClustering_2D.cxx</span></a></li>
<li class="toclevel-1"><a href="#CMakeLists.txt"><span class="tocnumber">5</span> <span class="toctext">CMakeLists.txt</span></a></li>
<li class="toclevel-1"><a href="#Download_and_Build_KdTreeBasedKMeansClustering_2D"><span class="tocnumber">6</span> <span class="toctext">Download and Build KdTreeBasedKMeansClustering_2D</span></a></li>
<li class="toclevel-1"><a href="#Building_All_of_the_Examples"><span class="tocnumber">7</span> <span class="toctext">Building All of the Examples</span></a></li>
<li class="toclevel-1"><a href="#ItkVtkGlue"><span class="tocnumber">8</span> <span class="toctext">ItkVtkGlue</span></a>
<ul>
<li class="toclevel-2"><a href="#ITK_&gt;=_4"><span class="tocnumber">8.1</span> <span class="toctext">ITK &gt;= 4</span></a></li>
<li class="toclevel-2"><a href="#ITK_&lt;_4"><span class="tocnumber">8.2</span> <span class="toctext">ITK &lt; 4</span></a></li>
</ul>
</li>
</ul>
</div>

<h2><span class="mw-headline" id="Description">Description</span></h2>
<p>Cluster a collection of measurements using the KMeans algorithm. The name "KdTreeBased" indicates that this is an efficient implementation which uses a KdTree.
</p>
<h2><span class="mw-headline" id="ITK_Classes_Demonstrated">ITK Classes Demonstrated</span></h2>
<h2><span class="mw-headline" id="Output">Output</span></h2>
<p>The input is shown on the left. It consists of a single collection of 2D points that lend themselves to easy clustering into 2 clusters. The output clusters are shown on the right. Points belonging to the same cluster as shown in the same color.
</p>
<h2><span class="mw-headline" id="KdTreeBasedKMeansClustering_2D.cxx">KdTreeBasedKMeansClustering_2D.cxx</span></h2>
<p>&lt;source lang="cpp"&gt;
</p>
<ol><li>include "itkDecisionRule.h"</li>
<li>include "itkVector.h"</li>
<li>include "itkListSample.h"</li>
<li>include "itkKdTree.h"</li>
<li>include "itkWeightedCentroidKdTreeGenerator.h"</li>
<li>include "itkKdTreeBasedKmeansEstimator.h"</li>
<li>include "itkMinimumDecisionRule2.h"</li>
<li>include "itkEuclideanDistanceMetric.h"</li>
<li>include "itkDistanceToCentroidMembershipFunction.h"</li>
<li>include "itkSampleClassifierFilter.h"</li>
<li>include "itkNormalVariateGenerator.h"</li></ol>
<ol><li>include "vtkActor.h"</li>
<li>include "vtkInteractorStyleTrackballCamera.h"</li>
<li>include "vtkPolyData.h"</li>
<li>include "vtkPolyDataMapper.h"</li>
<li>include "vtkProperty.h"</li>
<li>include "vtkRenderer.h"</li>
<li>include "vtkRenderWindow.h"</li>
<li>include "vtkRenderWindowInteractor.h"</li>
<li>include "vtkSmartPointer.h"</li>
<li>include "vtkVertexGlyphFilter.h"</li></ol>
<p>int main(int, char *[])
{
</p>
<pre> typedef itk::Vector&lt; double, 2 &gt; MeasurementVectorType;
 typedef itk::Statistics::ListSample&lt; MeasurementVectorType &gt; SampleType;
 SampleType::Pointer sample = SampleType::New();
</pre>
<pre> typedef itk::Statistics::NormalVariateGenerator NormalGeneratorType;
 NormalGeneratorType::Pointer normalGenerator = NormalGeneratorType::New();
</pre>
<pre> normalGenerator-&gt;Initialize( 101 );
</pre>
<pre> MeasurementVectorType mv;
 double mean = 100;
 double standardDeviation = 30;
 for ( unsigned int i = 0&#160;; i &lt; 100&#160;; ++i )
   {
   mv[0] = ( normalGenerator-&gt;GetVariate() * standardDeviation ) + mean;
   mv[1] = ( normalGenerator-&gt;GetVariate() * standardDeviation ) + mean;
   sample-&gt;PushBack( mv );
   }
</pre>
<pre> normalGenerator-&gt;Initialize( 3024 );
 mean = 200;
 standardDeviation = 30;
 for ( unsigned int i = 0&#160;; i &lt; 100&#160;; ++i )
   {
   mv[0] = ( normalGenerator-&gt;GetVariate() * standardDeviation ) + mean;
   mv[1] = ( normalGenerator-&gt;GetVariate() * standardDeviation ) + mean;
   sample-&gt;PushBack( mv );
   }
</pre>
<pre> typedef itk::Statistics::WeightedCentroidKdTreeGenerator&lt; SampleType &gt;
   TreeGeneratorType;
 TreeGeneratorType::Pointer treeGenerator = TreeGeneratorType::New();
</pre>
<pre> treeGenerator-&gt;SetSample( sample );
 treeGenerator-&gt;SetBucketSize( 16 );
 treeGenerator-&gt;Update();
</pre>
<pre> typedef TreeGeneratorType::KdTreeType TreeType;
 typedef itk::Statistics::KdTreeBasedKmeansEstimator&lt;TreeType&gt; EstimatorType;
 EstimatorType::Pointer estimator = EstimatorType::New();
</pre>
<pre> EstimatorType::ParametersType initialMeans(4);
 initialMeans[0] = 0.0; // Cluster 1, mean[0]
 initialMeans[1] = 0.0; // Cluster 1, mean[1]
 initialMeans[2] = 5.0; // Cluster 2, mean[0]
 initialMeans[3] = 5.0; // Cluster 2, mean[1]
</pre>
<pre> estimator-&gt;SetParameters( initialMeans );
 estimator-&gt;SetKdTree( treeGenerator-&gt;GetOutput() );
 estimator-&gt;SetMaximumIteration( 200 );
 estimator-&gt;SetCentroidPositionChangesThreshold(0.0);
 estimator-&gt;StartOptimization();
</pre>
<pre> EstimatorType::ParametersType estimatedMeans = estimator-&gt;GetParameters();
</pre>
<pre> for ( unsigned int i = 0&#160;; i &lt; 4&#160;; i+=2 )
   {
   std::cout &lt;&lt; "cluster[" &lt;&lt; i &lt;&lt; "] " &lt;&lt; std::endl;
   std::cout &lt;&lt; "    estimated mean&#160;: " &lt;&lt; estimatedMeans[i] &lt;&lt; " , " &lt;&lt; estimatedMeans[i+1] &lt;&lt; std::endl;
   }
</pre>
<pre> typedef itk::Statistics::DistanceToCentroidMembershipFunction&lt; MeasurementVectorType &gt;
   MembershipFunctionType;
 typedef MembershipFunctionType::Pointer                      MembershipFunctionPointer;
</pre>
<pre> typedef itk::Statistics::MinimumDecisionRule2 DecisionRuleType;
 DecisionRuleType::Pointer decisionRule = DecisionRuleType::New();
</pre>
<pre> typedef itk::Statistics::SampleClassifierFilter&lt; SampleType &gt; ClassifierType;
 ClassifierType::Pointer classifier = ClassifierType::New();
</pre>
<pre> classifier-&gt;SetDecisionRule(decisionRule);
 classifier-&gt;SetInput( sample );
 classifier-&gt;SetNumberOfClasses( 2 );
</pre>
<pre> typedef ClassifierType::ClassLabelVectorObjectType               ClassLabelVectorObjectType;
 typedef ClassifierType::ClassLabelVectorType                     ClassLabelVectorType;
 typedef ClassifierType::MembershipFunctionVectorObjectType       MembershipFunctionVectorObjectType;
 typedef ClassifierType::MembershipFunctionVectorType             MembershipFunctionVectorType;
</pre>
<pre> ClassLabelVectorObjectType::Pointer  classLabelsObject = ClassLabelVectorObjectType::New();
 classifier-&gt;SetClassLabels( classLabelsObject );
</pre>
<pre> ClassLabelVectorType &amp;  classLabelsVector = classLabelsObject-&gt;Get();
 classLabelsVector.push_back( 100 );
 classLabelsVector.push_back( 200 );
</pre>
<p><br />
</p>
<pre> MembershipFunctionVectorObjectType::Pointer membershipFunctionsObject =
   MembershipFunctionVectorObjectType::New();
 classifier-&gt;SetMembershipFunctions( membershipFunctionsObject );
</pre>
<pre> MembershipFunctionVectorType &amp;  membershipFunctionsVector = membershipFunctionsObject-&gt;Get();
</pre>
<pre> MembershipFunctionType::CentroidType origin( sample-&gt;GetMeasurementVectorSize() );
 int index = 0;
 for ( unsigned int i = 0&#160;; i &lt; 2&#160;; i++ )
   {
   MembershipFunctionPointer membershipFunction = MembershipFunctionType::New();
   for ( unsigned int j = 0&#160;; j &lt; sample-&gt;GetMeasurementVectorSize(); j++ )
     {
     origin[j] = estimatedMeans[index++];
     }
   membershipFunction-&gt;SetCentroid( origin );
   membershipFunctionsVector.push_back( membershipFunction.GetPointer() );
   }
</pre>
<pre> classifier-&gt;Update();
</pre>
<pre> const ClassifierType::MembershipSampleType* membershipSample = classifier-&gt;GetOutput();
 ClassifierType::MembershipSampleType::ConstIterator iter = membershipSample-&gt;Begin();
</pre>
<pre> while ( iter&#160;!= membershipSample-&gt;End() )
   {
   std::cout &lt;&lt; "measurement vector = " &lt;&lt; iter.GetMeasurementVector()
             &lt;&lt; "class label = " &lt;&lt; iter.GetClassLabel()
             &lt;&lt; std::endl;
   ++iter;
   }
</pre>
<pre> // Visualize
 vtkSmartPointer&lt;vtkPoints&gt; points1 =
   vtkSmartPointer&lt;vtkPoints&gt;::New();
 vtkSmartPointer&lt;vtkPoints&gt; points2 =
   vtkSmartPointer&lt;vtkPoints&gt;::New();
</pre>
<pre> iter = membershipSample-&gt;Begin();
 while ( iter&#160;!= membershipSample-&gt;End() )
   {
   if(iter.GetClassLabel() == 100)
     {
     points1-&gt;InsertNextPoint(iter.GetMeasurementVector()[0], iter.GetMeasurementVector()[1], 0);
     }
   else
     {
     points2-&gt;InsertNextPoint(iter.GetMeasurementVector()[0], iter.GetMeasurementVector()[1], 0);
     }
   ++iter;
   }
</pre>
<pre> vtkSmartPointer&lt;vtkPolyData&gt; polyData1 =
   vtkSmartPointer&lt;vtkPolyData&gt;::New();
 polyData1-&gt;SetPoints(points1);
 vtkSmartPointer&lt;vtkVertexGlyphFilter&gt; glyphFilter1 =
   vtkSmartPointer&lt;vtkVertexGlyphFilter&gt;::New();
 glyphFilter1-&gt;SetInputConnection(polyData1-&gt;GetProducerPort());
 glyphFilter1-&gt;Update();
 vtkSmartPointer&lt;vtkPolyDataMapper&gt; mapper1 =
   vtkSmartPointer&lt;vtkPolyDataMapper&gt;::New();
 mapper1-&gt;SetInputConnection(glyphFilter1-&gt;GetOutputPort());
 vtkSmartPointer&lt;vtkActor&gt; actor1 =
   vtkSmartPointer&lt;vtkActor&gt;::New();
 actor1-&gt;GetProperty()-&gt;SetColor(0,1,0);
 actor1-&gt;GetProperty()-&gt;SetPointSize(3);
 actor1-&gt;SetMapper(mapper1);
</pre>
<pre> vtkSmartPointer&lt;vtkPolyData&gt; polyData2 =
   vtkSmartPointer&lt;vtkPolyData&gt;::New();
 polyData2-&gt;SetPoints(points2);
 vtkSmartPointer&lt;vtkVertexGlyphFilter&gt; glyphFilter2 =
   vtkSmartPointer&lt;vtkVertexGlyphFilter&gt;::New();
 glyphFilter2-&gt;SetInputConnection(polyData2-&gt;GetProducerPort());
 glyphFilter2-&gt;Update();
 vtkSmartPointer&lt;vtkPolyDataMapper&gt; mapper2 =
   vtkSmartPointer&lt;vtkPolyDataMapper&gt;::New();
 mapper2-&gt;SetInputConnection(glyphFilter2-&gt;GetOutputPort());
 vtkSmartPointer&lt;vtkActor&gt; actor2 =
   vtkSmartPointer&lt;vtkActor&gt;::New();
 actor2-&gt;GetProperty()-&gt;SetColor(1,0,0);
 actor2-&gt;GetProperty()-&gt;SetPointSize(3);
 actor2-&gt;SetMapper(mapper2);
</pre>
<pre> vtkSmartPointer&lt;vtkRenderWindow&gt; renderWindow =
   vtkSmartPointer&lt;vtkRenderWindow&gt;::New();
 renderWindow-&gt;SetSize(300,300);
</pre>
<pre> vtkSmartPointer&lt;vtkRenderer&gt; renderer =
   vtkSmartPointer&lt;vtkRenderer&gt;::New();
 renderWindow-&gt;AddRenderer(renderer);
</pre>
<pre> renderer-&gt;AddActor(actor1);
 renderer-&gt;AddActor(actor2);
 renderer-&gt;ResetCamera();
 renderer-&gt;Render();
</pre>
<pre> vtkSmartPointer&lt;vtkRenderWindowInteractor&gt; renderWindowInteractor =
   vtkSmartPointer&lt;vtkRenderWindowInteractor&gt;::New();
 vtkSmartPointer&lt;vtkInteractorStyleTrackballCamera&gt; style =
   vtkSmartPointer&lt;vtkInteractorStyleTrackballCamera&gt;::New();
</pre>
<pre> renderWindowInteractor-&gt;SetInteractorStyle(style);
</pre>
<pre> renderWindowInteractor-&gt;SetRenderWindow(renderWindow);
 renderWindowInteractor-&gt;Initialize();
</pre>
<pre> renderWindowInteractor-&gt;Start();
</pre>
<pre> return EXIT_SUCCESS;
</pre>
<p>}
&lt;/source&gt;
</p>
<h2><span class="mw-headline" id="CMakeLists.txt">CMakeLists.txt</span></h2>
<p>&lt;syntaxhighlight lang="cmake"&gt;
cmake_minimum_required(VERSION 3.9.5)
</p><p>project(KdTreeBasedKMeansClustering_2D)
</p><p>find_package(ITK REQUIRED)
include(${ITK_USE_FILE})
if (ITKVtkGlue_LOADED)
</p>
<pre> find_package(VTK REQUIRED)
 include(${VTK_USE_FILE})
</pre>
<p>else()
</p>
<pre> find_package(ItkVtkGlue REQUIRED)
 include(${ItkVtkGlue_USE_FILE})
 set(Glue ItkVtkGlue)
</pre>
<p>endif()
</p><p>add_executable(KdTreeBasedKMeansClustering_2D MACOSX_BUNDLE KdTreeBasedKMeansClustering_2D.cxx)
target_link_libraries(KdTreeBasedKMeansClustering_2D
</p>
<pre> ${Glue}  ${VTK_LIBRARIES} ${ITK_LIBRARIES})
</pre>
<p>&lt;/syntaxhighlight&gt;
</p>
<h2><span class="mw-headline" id="Download_and_Build_KdTreeBasedKMeansClustering_2D">Download and Build KdTreeBasedKMeansClustering_2D</span></h2>
<p>Click <a rel="nofollow" class="external text" href="https://github.com/lorensen/ITKWikiExamplesTarballs/raw/master/KdTreeBasedKMeansClustering_2D.tar">here to download <i>KdTreeBasedKMeansClustering_2D</i></a>. and its <i>CMakeLists.txt</i> file.
Once the tarball <i>KdTreeBasedKMeansClustering_2D.tar</i> has been downloaded and extracted,
</p>
<pre>cd KdTreeBasedKMeansClustering_2D/build 
</pre>
<ul><li>If ITK is installed:</li></ul>
<pre>cmake ..
</pre>
<ul><li>If ITK is not installed but compiled on your system, you will need to specify <b>the path to your ITK build</b>:</li></ul>
<pre>cmake -DITK_DIR:PATH=<b>/home/me/itk_build</b> ..
</pre>
<p>Build the project,
</p>
<pre>make
</pre>
<p>and run it:
</p>
<pre>./KdTreeBasedKMeansClustering_2D
</pre>
<p><b>WINDOWS USERS PLEASE NOTE:</b> Be sure to add the VTK and ITK bin directories to your path. This will resolve the VTK and ITK dll's at run time.
</p>
<h2><span class="mw-headline" id="Building_All_of_the_Examples">Building All of the Examples</span></h2>
<p>Many of the examples in the ITK Wiki Examples Collection require VTK. You can build all of the the examples by following <a href="/Wiki/ITK/Examples/Instructions/ForUsers#Build_all_of_the_examples" title="ITK/Examples/Instructions/ForUsers">these instructions</a>. If you are a new VTK user, you may want to try the <a href="/Wiki/ITK/Examples/Instructions/ForUsers#Use_the_Superbuild_to_build_a_proper_VTK_and_ITK" title="ITK/Examples/Instructions/ForUsers">Superbuild</a> which will build a proper ITK and VTK.
</p>
<h2><span class="mw-headline" id="ItkVtkGlue">ItkVtkGlue</span></h2>
<h3><span id="ITK_.3E.3D_4"></span><span class="mw-headline" id="ITK_&gt;=_4">ITK &gt;= 4</span></h3>
<p>For examples that use QuickView (which depends on VTK), you must have built ITK with Module_ITKVtkGlue=ON.
</p>
<h3><span id="ITK_.3C_4"></span><span class="mw-headline" id="ITK_&lt;_4">ITK &lt; 4</span></h3>
<p>Some of the ITK Examples require VTK to display the images. If you download the entire ITK Wiki Examples Collection, the ItkVtkGlue directory will be included and configured. If you wish to just build a few examples, then you will need to <a rel="nofollow" class="external text" href="https://github.com/InsightSoftwareConsortium/ITKWikiExamples/raw/master/ItkVtkGlue.tar.gz">download ItkVtkGlue</a> and build it. When you run cmake it will ask you to specify the location of the ItkVtkGlue binary directory.
</p>
<!-- 
NewPP limit report
Cached time: 20231201085346
Cache expiry: 86400
Reduced expiry: false
Complications: []
CPU time usage: 0.012 seconds
Real time usage: 0.013 seconds
Preprocessor visited node count: 34/1000000
Post‐expand include size: 3127/2097152 bytes
Template argument size: 300/2097152 bytes
Highest expansion depth: 4/100
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 0/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    2.712      1 Template:ITKVTKCMakeLists
100.00%    2.712      1 -total
-->

<!-- Saved in parser cache with key KitwarePublicWikiDB:pcache:idhash:8095-0!canonical and timestamp 20231201085346 and revision id 49493. Serialized with JSON.
 -->
</div>
<div class="printfooter">Retrieved from "<a dir="ltr" href="https://public.kitware.com/Wiki/index.php?title=ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;oldid=49493">https://public.kitware.com/Wiki/index.php?title=ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;oldid=49493</a>"</div></div>
				<div id="catlinks" class="catlinks catlinks-allhidden" data-mw="interface"></div>
				<!-- end content -->
				<div class="visualClear"></div>
			</div>
		</div>
		<div class="visualClear"></div>
	</div>
	<div id="column-one" >
		<h2>Navigation menu</h2>
		<div role="navigation" class="portlet" id="p-cactions" aria-labelledby="p-cactions-label">
			<h3 id="p-cactions-label" >Page actions</h3>
			<div class="pBody">
				<ul >
				<li id="ca-nstab-main" class="selected mw-list-item"><a href="/Wiki/ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D" title="View the content page [c]" accesskey="c">Page</a></li><li id="ca-talk" class="new mw-list-item"><a href="/Wiki/index.php?title=Talk:ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t">Discussion</a></li><li id="ca-view" class="selected mw-list-item"><a href="/Wiki/ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D">Read</a></li><li id="ca-viewsource" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li><li id="ca-history" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li>
				
				</ul>
			</div>
		</div>
		
<div role="navigation" class="portlet mw-portlet mw-portlet-cactions-mobile"
	id="p-cactions-mobile" aria-labelledby="p-cactions-mobile-label">
	<h3 id="p-cactions-mobile-label" >Page actions</h3>
	<div class="pBody">
		<ul ><li id="main-mobile" class="selected mw-list-item"><a href="/Wiki/ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D" title="Page">Page</a></li><li id="talk-mobile" class="new mw-list-item"><a href="/Wiki/index.php?title=Talk:ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;action=edit&amp;redlink=1" title=" (page does not exist)">Discussion</a></li><li id="ca-more" class="mw-list-item"><a href="#p-cactions">More</a></li><li id="ca-tools" class="mw-list-item"><a href="#p-tb" title="Tools">Tools</a></li></ul>
		
	</div>
</div>

		<div role="navigation" class="portlet" id="p-personal" aria-labelledby="p-personal-label">
			<h3 id="p-personal-label" >Personal tools</h3>
			<div class="pBody">
				<ul >
				<li id="pt-login" class="mw-list-item"><a href="/Wiki/index.php?title=Special:UserLogin&amp;returnto=ITK%2FExamplesBoneyard%2FKdTreeBasedKMeansClustering+2D" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
				</ul>
			</div>
		</div>
		<div class="portlet" id="p-logo" role="banner">
			<a href="/Wiki/Main_Page" class="mw-wiki-logo"></a>
		</div>
		<div id="sidebar">
		
<div role="navigation" class="portlet mw-portlet mw-portlet-navigation"
	id="p-navigation" aria-labelledby="p-navigation-label">
	<h3 id="p-navigation-label" >Navigation</h3>
	<div class="pBody">
		<ul ><li id="n-mainpage-description" class="mw-list-item"><a href="/Wiki/Main_Page" icon="home" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-recentchanges" class="mw-list-item"><a href="/Wiki/Special:RecentChanges" icon="recentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-randompage" class="mw-list-item"><a href="/Wiki/Special:Random" icon="die" title="Load a random page [x]" accesskey="x">Random page</a></li><li id="n-help-mediawiki" class="mw-list-item"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents">Help about MediaWiki</a></li></ul>
		
	</div>
</div>

		<div role="search" class="portlet" id="p-search">
			<h3 id="p-search-label" ><label for="searchInput">Search</label></h3>
			<div class="pBody" id="searchBody">
				<form action="/Wiki/index.php" id="searchform"><input type="hidden" value="Special:Search" name="title"><input type="search" name="search" placeholder="Search KitwarePublic" aria-label="Search KitwarePublic" autocapitalize="sentences" title="Search KitwarePublic [f]" accesskey="f" id="searchInput"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" class="searchButton" id="searchButton"/> <input type="submit" name="fulltext" value="Search" title="Search the pages for this text" class="searchButton mw-fallbackSearchButton" id="mw-searchButton"/></form>
			</div>
		</div>
		
<div role="navigation" class="portlet mw-portlet mw-portlet-tb"
	id="p-tb" aria-labelledby="p-tb-label">
	<h3 id="p-tb-label" >Tools</h3>
	<div class="pBody">
		<ul ><li id="t-whatlinkshere" class="mw-list-item"><a href="/Wiki/Special:WhatLinksHere/ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/Wiki/Special:RecentChangesLinked/ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-specialpages" class="mw-list-item"><a href="/Wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li><li id="t-permalink" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;oldid=49493" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/ExamplesBoneyard/KdTreeBasedKMeansClustering_2D&amp;action=info" title="More information about this page">Page information</a></li></ul>
		
	</div>
</div>

		
		</div>
		<a href="#sidebar" title="Jump to navigation"
			class="menu-toggle" id="sidebar-toggle"></a>
		<a href="#p-personal" title="user tools"
			class="menu-toggle" id="p-personal-toggle"></a>
		<a href="#globalWrapper" title="back to top"
			class="menu-toggle" id="globalWrapper-toggle"></a>
	</div>
	<!-- end of the left (by default at least) column -->
	<div class="visualClear"></div>
	<div id="footer" class="mw-footer" role="contentinfo"
		>
		<div id="f-copyrightico" class="footer-icons">
			<a href="https://creativecommons.org/licenses/by/2.5/"><img src="https://creativecommons.org/images/public/somerights20.png" alt="Attribution2.5" width="88" height="31" loading="lazy"/></a>
		</div>
		<div id="f-poweredbyico" class="footer-icons">
			<a href="https://www.mediawiki.org/"><img src="/Wiki/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/Wiki/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /Wiki/resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a>
		</div>
		<ul id="f-list">
			<li id="lastmod"> This page was last edited on 28 November 2012, at 18:05.</li><li id="copyright">Content is available under <a class="external" rel="nofollow" href="https://creativecommons.org/licenses/by/2.5/">Attribution2.5</a> unless otherwise noted.</li>
			<li id="privacy"><a href="/Wiki/KitwarePublic:Privacy_policy" title="KitwarePublic:Privacy policy">Privacy policy</a></li><li id="about"><a href="/Wiki/KitwarePublic:About" title="KitwarePublic:About">About KitwarePublic</a></li><li id="disclaimer"><a href="/Wiki/KitwarePublic:General_disclaimer" title="KitwarePublic:General disclaimer">Disclaimers</a></li>
		</ul>
	</div>
</div>
<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.012","walltime":"0.013","ppvisitednodes":{"value":34,"limit":1000000},"postexpandincludesize":{"value":3127,"limit":2097152},"templateargumentsize":{"value":300,"limit":2097152},"expansiondepth":{"value":4,"limit":100},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":0,"limit":5000000},"timingprofile":["100.00%    2.712      1 Template:ITKVTKCMakeLists","100.00%    2.712      1 -total"]},"cachereport":{"timestamp":"20231201085346","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":165});});</script>
</body>
</html>