<!DOCTYPE html>
<html class="client-nojs" lang="en" dir="ltr">
<head>
<meta charset="UTF-8"/>
<title>ITK/Debug Visualizers for Visual Studio - KitwarePublic</title>
<script>document.documentElement.className="client-js";RLCONF={"wgBreakFrames":!1,"wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgRequestId":"7076a5a3b6dc4ae534deb29a","wgCSPNonce":!1,"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":!1,"wgNamespaceNumber":0,"wgPageName":"ITK/Debug_Visualizers_for_Visual_Studio","wgTitle":"ITK/Debug Visualizers for Visual Studio","wgCurRevisionId":62850,"wgRevisionId":62850,"wgArticleId":9468,"wgIsArticle":!0,"wgIsRedirect":!1,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgRelevantPageName":"ITK/Debug_Visualizers_for_Visual_Studio","wgRelevantArticleId":9468,"wgIsProbablyEditable":!1,"wgRelevantPageIsProbablyEditable":!1,"wgRestrictionEdit":[],"wgRestrictionMove":[]};
RLSTATE={"site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","ext.pygments":"ready","skins.monobook.styles":"ready"};RLPAGEMODULES=["site","mediawiki.page.ready","mediawiki.toc","skins.monobook.scripts"];</script>
<script>(RLQ=window.RLQ||[]).push(function(){mw.loader.implement("user.options@1hzgi",function($,jQuery,require,module){/*@nomin*/mw.user.tokens.set({"patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});
});});</script>
<link rel="stylesheet" href="/Wiki/load.php?lang=en&amp;modules=ext.pygments%7Cskins.monobook.styles&amp;only=styles&amp;skin=monobook"/>
<script async="" src="/Wiki/load.php?lang=en&amp;modules=startup&amp;only=scripts&amp;raw=1&amp;skin=monobook"></script>
<meta name="ResourceLoaderDynamicStyles" content=""/>
<link rel="stylesheet" href="/Wiki/load.php?lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=monobook"/>
<meta name="generator" content="MediaWiki 1.37.1"/>
<meta name="format-detection" content="telephone=no"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.25, maximum-scale=5.0"/>
<link rel="shortcut icon" href="/favicon.ico"/>
<link rel="search" type="application/opensearchdescription+xml" href="/Wiki/opensearch_desc.php" title="KitwarePublic (en)"/>
<link rel="EditURI" type="application/rsd+xml" href="https://public.kitware.com/Wiki/api.php?action=rsd"/>
<link rel="license" href="https://creativecommons.org/licenses/by/2.5/"/>
<link rel="alternate" type="application/atom+xml" title="KitwarePublic Atom feed" href="/Wiki/index.php?title=Special:RecentChanges&amp;feed=atom"/>
</head>
<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-ITK_Debug_Visualizers_for_Visual_Studio rootpage-ITK skin-monobook action-view skin--responsive"><div id="globalWrapper">
	<div id="column-content">
		<div id="content" class="mw-body" role="main">
			<a id="top"></a>
			<div id="siteNotice"></div>
			<div class="mw-indicators">
			</div>
			<h1 id="firstHeading" class="firstHeading"
				>ITK/Debug Visualizers for Visual Studio</h1>
			<div id="bodyContent" class="monobook-body">
				<div id="siteSub">From KitwarePublic</div>
				<div id="contentSub" ><span class="subpages">&lt; <a href="/Wiki/ITK" title="ITK">ITK</a></span></div>
				
				<div id="jump-to-nav"></div><a href="#column-one" class="mw-jump-link">Jump to navigation</a><a href="#searchInput" class="mw-jump-link">Jump to search</a>
				<!-- start content -->
				<div id="mw-content-text" class="mw-body-content mw-content-ltr" lang="en" dir="ltr"><div class="mw-parser-output"><div id="toc" class="toc" role="navigation" aria-labelledby="mw-toc-heading"><input type="checkbox" role="button" id="toctogglecheckbox" class="toctogglecheckbox" style="display:none" /><div class="toctitle" lang="en" dir="ltr"><h2 id="mw-toc-heading">Contents</h2><span class="toctogglespan"><label class="toctogglelabel" for="toctogglecheckbox"></label></span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Visual_Studio_2008/2010"><span class="tocnumber">1</span> <span class="toctext">Visual Studio 2008/2010</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#itk_debug_visualizers.dat"><span class="tocnumber">1.1</span> <span class="toctext">itk_debug_visualizers.dat</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-3"><a href="#Visual_Studio_2012"><span class="tocnumber">2</span> <span class="toctext">Visual Studio 2012</span></a></li>
</ul>
</div>

<h2><span id="Visual_Studio_2008.2F2010"></span><span class="mw-headline" id="Visual_Studio_2008/2010">Visual Studio 2008/2010</span></h2>
<p>Visual studio has support for custom visualization of user types in debugger (watch window and mouse hover).
</p><p>File C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\Packages\Debugger\autoexp.dat controls how different datatypes are displayed. The file itself contains instructions on how to modify it. Anyone can add custom definitions for their own classes. The file below contains definitions for some of the ITK's classes. The contents of <i>itk_debug_visualizers.dat</i> should be merged into <i>autoexp.dat</i>.
</p><p>With VS2008 SP1 and newer you don't even have to modify <i>autoexp.dat</i>, you can add environment variable <b>_vcee_autoexp</b> which points to your own file which will then be combined with the system one on the fly by Visual Studio each time debugging session is started (F5 pressed). 
</p><p>Watch window displaying itk::Image using enhanced view:
</p><p><a href="/Wiki/File:WatchImage.png" class="image"><img alt="WatchImage.png" src="/Wiki/images/c/cd/WatchImage.png" decoding="async" width="864" height="242" /></a>
</p><p>itk::Image with underlying buffer expanded (limited to first million elements):
</p><p><a href="/Wiki/File:WatchBuffer.png" class="image"><img alt="WatchBuffer.png" src="/Wiki/images/8/8d/WatchBuffer.png" decoding="async" width="864" height="242" /></a>
</p><p>I have started building this file, but it only contains support for itk::Image, the classes image contains and basic iterator types. With distributed effort, anyone can contribute a visualizer for a class or two for everyone's benefit.
</p>
<h3><span class="mw-headline" id="itk_debug_visualizers.dat">itk_debug_visualizers.dat</span></h3>
<div class="mw-highlight mw-content-ltr" dir="ltr"><pre><span></span><span class="c1">;InsightToolkit enhanced debugger visualizers for Visual Studio</span>
<span class="c1">;I used this: http://www.virtualdub.org/blog/pivot/entry.php?id=120</span>
<span class="c1">;as the main guide. This too: http://www.filetolink.com/17ad36ef</span>
<span class="c1">;using Notepad++ with LISP/Scheme syntax highlight is better than plain text</span>
<span class="c1">;Dženan Zukić</span>

<span class="nv">[ExecutionControl]</span>
<span class="c1">;syntax myfunctionname=NoStepInto</span>

<span class="c1">;do not step into any of the SmartPointer&#39;s methods</span>
<span class="nv">itk::SmartPointer::*=NoStepInto</span>

<span class="nv">[Visualizer]</span>

<span class="c1">;-----------------------------------Size-----------------------------------</span>
<span class="nv">itk::Size&lt;*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_Size</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_Size</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span><span class="o">,</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------Index-----------------------------------</span>
<span class="nv">itk::Index&lt;*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_Index</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_Index</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span><span class="o">,</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------FixedArray-----------------------------------</span>
<span class="nv">itk::FixedArray&lt;double,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span><span class="ss">:[$e,g],</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="nv">itk::FixedArray&lt;*,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span><span class="o">,</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------CovariantVector-----------------------------------</span>
<span class="c1">;covariant vector is exactly the same as fixed array, from which it is derived</span>
<span class="c1">;because CovariantVector does not introduce any new member variables</span>

<span class="c1">;specialization for double</span>
<span class="c1">;otherwise there are too many digits displayed in preview</span>
<span class="nv">itk::CovariantVector&lt;double,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span><span class="ss">:[$e,g],</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="nv">itk::CovariantVector&lt;*,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span><span class="o">,</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------Point-----------------------------------</span>
<span class="c1">;point is exactly the same as fixed array, from which it is derived</span>
<span class="c1">;because point does not introduce any new member variables</span>

<span class="c1">;specialization for double</span>
<span class="c1">;otherwise there are too many digits displayed in preview</span>
<span class="nv">itk::Point&lt;double,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span><span class="ss">:[$e,g],</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="nv">itk::Point&lt;*,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span><span class="o">,</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------Vector-----------------------------------</span>
<span class="c1">;same as point</span>

<span class="nv">itk::Vector&lt;double,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T1</span>
           <span class="p">)</span><span class="ss">:[$e,g],</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="nv">itk::Vector&lt;*,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;[&quot;</span><span class="o">,</span>
           <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_InternalArray</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$T2</span>
           <span class="p">)</span><span class="o">,</span>
         <span class="s">&quot;]&quot;</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------ImportImageContainer-----------------------------------</span>
<span class="nv">itk::ImportImageContainer&lt;*,*&gt;{</span> 
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="nv">size:</span> <span class="nv">$c.m_Size,</span>
         <span class="nv">capacity:</span> <span class="nv">$c.m_Capacity,</span>
         <span class="o">#(</span><span class="nv">uglyAll:</span> <span class="nv">[$c,!]</span><span class="p">)</span><span class="o">,</span>
         <span class="err">#</span><span class="nc">array</span><span class="p">(</span>
            <span class="nv">expr</span> <span class="err">:</span>    <span class="p">(</span><span class="nv">$c.m_ImportPointer</span><span class="p">)</span><span class="nv">[$i],</span>
            <span class="nv">size</span> <span class="err">:</span>    <span class="nv">$c.m_Size</span>
           <span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;Alloc &quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Size,</span>
         <span class="s">&quot; of &quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Capacity</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>


<span class="c1">;Note: ImageRegion and/or ImageBase(Image) have a bugged preview</span>
<span class="c1">;I don&#39;t know whether this is a bug in VS or my code is wrong</span>
<span class="c1">;It does not impair function but it does look ugly</span>

<span class="c1">;-----------------------------------ImageRegion-----------------------------------</span>
<span class="nv">itk::ImageRegion&lt;*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="nv">size:</span> <span class="nv">$c.m_Size,</span>
         <span class="nv">index:</span> <span class="nv">$c.m_Index</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot;R&quot;</span><span class="o">,</span> <span class="nv">$c.m_Size</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------ImageBase-----------------------------------</span>
<span class="nv">itk::ImageBase&lt;*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="nv">size:</span> <span class="nv">$c.m_LargestPossibleRegion,</span>
         <span class="nv">origin:</span> <span class="nv">$c.m_Origin,</span>
         <span class="nv">spacing:</span> <span class="nv">$c.m_Spacing,</span>
         <span class="o">#(</span><span class="nv">allMembers:</span> <span class="nv">[$c,!]</span><span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="nv">$c.m_LargestPossibleRegion,</span>
         <span class="s">&quot;@&quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Origin</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------Image-----------------------------------</span>
<span class="c1">;derived from ImageBase + m_Buffer</span>
<span class="c1">;but it is dependent on one more template parameter</span>

<span class="nv">itk::Image&lt;*,*&gt;{</span>
  <span class="nv">children</span>
   <span class="p">(</span>
      <span class="o">#(</span>
         <span class="nv">size:</span> <span class="nv">$c.m_LargestPossibleRegion,</span>
         <span class="nv">origin:</span> <span class="nv">$c.m_Origin,</span>
         <span class="nv">spacing:</span> <span class="nv">$c.m_Spacing,</span>
         <span class="nv">buffer:</span> <span class="nv">$c.m_Buffer,</span>
         <span class="o">#(</span><span class="nv">allMembers:</span> <span class="nv">[$c,!]</span><span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>

   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="nv">$c.m_LargestPossibleRegion,</span>
         <span class="s">&quot;@&quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Origin</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;for iterators, just define preview (which uses default children)</span>
<span class="c1">;for this purpose, we can use the same code for all the basic iterators</span>

<span class="c1">;-----------------------------------ImageConstIterator-----------------------------------</span>
<span class="nv">itk::ImageConstIterator&lt;*&gt;{</span> 
   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot; [&quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Offset,</span>
         <span class="s">&quot;] &quot;</span><span class="o">,</span>
         <span class="nb">*</span><span class="p">(</span><span class="nv">$c.m_Buffer+$c.m_Offset</span><span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------ImageIterator-----------------------------------</span>
<span class="nv">itk::ImageIterator&lt;*&gt;{</span> 
   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot; [&quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Offset,</span>
         <span class="s">&quot;] &quot;</span><span class="o">,</span>
         <span class="nb">*</span><span class="p">(</span><span class="nv">$c.m_Buffer+$c.m_Offset</span><span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------ImageRegionConstIterator-----------------------------------</span>
<span class="nv">itk::ImageRegionConstIterator&lt;*&gt;{</span> 
   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot; [&quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Offset,</span>
         <span class="s">&quot;] &quot;</span><span class="o">,</span>
         <span class="nb">*</span><span class="p">(</span><span class="nv">$c.m_Buffer+$c.m_Offset</span><span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;-----------------------------------ImageRegionIterator-----------------------------------</span>
<span class="nv">itk::ImageRegionIterator&lt;*&gt;{</span> 
   <span class="nv">preview</span>
   <span class="p">(</span>
     <span class="o">#(</span>
         <span class="s">&quot; [&quot;</span><span class="o">,</span>
         <span class="nv">$c.m_Offset,</span>
         <span class="s">&quot;] &quot;</span><span class="o">,</span>
         <span class="nb">*</span><span class="p">(</span><span class="nv">$c.m_Buffer+$c.m_Offset</span><span class="p">)</span>
      <span class="p">)</span>
   <span class="p">)</span>
<span class="nv">}</span>

<span class="c1">;the below visualizer for smart pointer is a worthless &quot;improvement&quot; over the deafult</span>
<span class="c1">;-----------------------------------SmartPointer-----------------------------------</span>
<span class="c1">;itk::SmartPointer&lt;*&gt;{</span>
<span class="c1">;  children</span>
<span class="c1">;   (</span>
<span class="c1">;      #(</span>
<span class="c1">;         ptr: *($c.m_Pointer)</span>
<span class="c1">;      )</span>
<span class="c1">;   )</span>
<span class="c1">;</span>
<span class="c1">;   preview</span>
<span class="c1">;    (</span>
<span class="c1">;        #(</span>
<span class="c1">;            (void *)$c.m_Pointer,</span>
<span class="c1">;            &quot; &quot;,</span>
<span class="c1">;            *($c.m_Pointer)</span>
<span class="c1">;        )</span>
<span class="c1">;    )</span>
<span class="c1">;}</span>
</pre></div>
<h2><span class="mw-headline" id="Visual_Studio_2012">Visual Studio 2012</span></h2>
<p>Visual Studio 2012 introduces a novel type visualization framework called <i>natvis</i>. A good <a rel="nofollow" class="external text" href="http://code.msdn.microsoft.com/windowsdesktop/Writing-type-visualizers-2eae77a2">natvis tutorial</a> is hosted on MSDN. Natvis files are now defined per user and can be put in following folder: <b>%USERPROFILE%/documents/visual studio 2012/visualizers</b>
</p><p>Support for the new style of debug visualizers is added in this <a rel="nofollow" class="external text" href="http://review.source.kitware.com/#/c/23441/">patch</a>.
</p><p><a rel="nofollow" class="external text" href="http://visualstudiogallery.msdn.microsoft.com/e682d542-7ef3-402c-b857-bbfba714f78d">Image Watch</a> is a Visual Studio add-on which allows developers to display 2D images during debug sessions. In order to integrate support for the display of 2D ITK images, copy <a rel="nofollow" class="external text" href="https://gist.github.com/hauke76/5082634">this natvis file</a> into the 'visualizers' directory mentioned above.
</p>
<!-- 
NewPP limit report
Cached time: 20220809022651
Cache expiry: 86400
Reduced expiry: false
Complications: []
CPU time usage: 0.028 seconds
Real time usage: 0.273 seconds
Preprocessor visited node count: 16/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
Unstrip recursion depth: 0/20
Unstrip post‐expand size: 24226/5000000 bytes
-->
<!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
-->

<!-- Saved in parser cache with key KitwarePublicWikiDB:pcache:idhash:9468-0!canonical and timestamp 20220809022650 and revision id 62850. Serialized with JSON.
 -->
</div>
<div class="printfooter">Retrieved from "<a dir="ltr" href="https://public.kitware.com/Wiki/index.php?title=ITK/Debug_Visualizers_for_Visual_Studio&amp;oldid=62850">https://public.kitware.com/Wiki/index.php?title=ITK/Debug_Visualizers_for_Visual_Studio&amp;oldid=62850</a>"</div></div>
				<div id="catlinks" class="catlinks catlinks-allhidden" data-mw="interface"></div>
				<!-- end content -->
				<div class="visualClear"></div>
			</div>
		</div>
		<div class="visualClear"></div>
	</div>
	<div id="column-one" >
		<h2>Navigation menu</h2>
		<div role="navigation" class="portlet" id="p-cactions" aria-labelledby="p-cactions-label">
			<h3 id="p-cactions-label" >Page actions</h3>
			<div class="pBody">
				<ul >
				<li id="ca-nstab-main" class="selected mw-list-item"><a href="/Wiki/ITK/Debug_Visualizers_for_Visual_Studio" title="View the content page [c]" accesskey="c">Page</a></li><li id="ca-talk" class="new mw-list-item"><a href="/Wiki/index.php?title=Talk:ITK/Debug_Visualizers_for_Visual_Studio&amp;action=edit&amp;redlink=1" rel="discussion" title="Discussion about the content page (page does not exist) [t]" accesskey="t">Discussion</a></li><li id="ca-view" class="selected mw-list-item"><a href="/Wiki/ITK/Debug_Visualizers_for_Visual_Studio">View</a></li><li id="ca-viewsource" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Debug_Visualizers_for_Visual_Studio&amp;action=edit" title="This page is protected.&#10;You can view its source [e]" accesskey="e">View source</a></li><li id="ca-history" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Debug_Visualizers_for_Visual_Studio&amp;action=history" title="Past revisions of this page [h]" accesskey="h">History</a></li>
				
				</ul>
			</div>
		</div>
		<div role="navigation" class="portlet mw-portlet mw-portlet-cactions-mobile"
	id="p-cactions-mobile" aria-labelledby="p-cactions-mobile-label">
	<h3 id="p-cactions-mobile-label" >Page actions</h3>
	<div class="pBody">
		<ul ><li id="main-mobile" class="selected mw-list-item"><a href="/Wiki/ITK/Debug_Visualizers_for_Visual_Studio" title="Page">Page</a></li><li id="talk-mobile" class="new mw-list-item"><a href="/Wiki/index.php?title=Talk:ITK/Debug_Visualizers_for_Visual_Studio&amp;action=edit&amp;redlink=1" title=" (page does not exist)">Discussion</a></li><li id="ca-more" class="mw-list-item"><a href="#p-cactions">More</a></li><li id="ca-tools" class="mw-list-item"><a href="#p-tb" title="Tools">Tools</a></li></ul>
		
	</div>
</div>

		<div role="navigation" class="portlet" id="p-personal" aria-labelledby="p-personal-label">
			<h3 id="p-personal-label" >Personal tools</h3>
			<div class="pBody">
				<ul >
				<li id="pt-login" class="mw-list-item"><a href="/Wiki/index.php?title=Special:UserLogin&amp;returnto=ITK%2FDebug+Visualizers+for+Visual+Studio" title="You are encouraged to log in; however, it is not mandatory [o]" accesskey="o">Log in</a></li>
				</ul>
			</div>
		</div>
		<div class="portlet" id="p-logo" role="banner">
			<a href="/Wiki/Main_Page" class="mw-wiki-logo"></a>
		</div>
		<div id="sidebar">
		<div role="navigation" class="portlet mw-portlet mw-portlet-navigation"
	id="p-navigation" aria-labelledby="p-navigation-label">
	<h3 id="p-navigation-label" >Navigation</h3>
	<div class="pBody">
		<ul ><li id="n-mainpage-description" class="mw-list-item"><a href="/Wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-recentchanges" class="mw-list-item"><a href="/Wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-randompage" class="mw-list-item"><a href="/Wiki/Special:Random" title="Load a random page [x]" accesskey="x">Random page</a></li><li id="n-help-mediawiki" class="mw-list-item"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents">Help about MediaWiki</a></li></ul>
		
	</div>
</div>

		<div role="search" class="portlet" id="p-search">
			<h3 id="p-search-label" dir="ltr" lang="en-GB"><label for="searchInput">Search</label></h3>
			<div class="pBody" id="searchBody">
				<form action="/Wiki/index.php" id="searchform"><input type="hidden" value="Special:Search" name="title"><input type="search" name="search" placeholder="Search KitwarePublic" autocapitalize="sentences" title="Search KitwarePublic [f]" accesskey="f" id="searchInput"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/> <input type="submit" name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/></form>
			</div>
		</div>
		<div role="navigation" class="portlet mw-portlet mw-portlet-tb"
	id="p-tb" aria-labelledby="p-tb-label">
	<h3 id="p-tb-label" >Tools</h3>
	<div class="pBody">
		<ul ><li id="t-whatlinkshere" class="mw-list-item"><a href="/Wiki/Special:WhatLinksHere/ITK/Debug_Visualizers_for_Visual_Studio" title="A list of all wiki pages that link here [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked" class="mw-list-item"><a href="/Wiki/Special:RecentChangesLinked/ITK/Debug_Visualizers_for_Visual_Studio" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-specialpages" class="mw-list-item"><a href="/Wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-print" class="mw-list-item"><a href="javascript:print();" rel="alternate" title="Printable version of this page [p]" accesskey="p">Printable version</a></li><li id="t-permalink" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Debug_Visualizers_for_Visual_Studio&amp;oldid=62850" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info" class="mw-list-item"><a href="/Wiki/index.php?title=ITK/Debug_Visualizers_for_Visual_Studio&amp;action=info" title="More information about this page">Page information</a></li></ul>
		
	</div>
</div>

		
		</div>
		<a href="#sidebar" title="Jump to navigation"
			class="menu-toggle" id="sidebar-toggle"></a>
		<a href="#p-personal" title="user tools"
			class="menu-toggle" id="p-personal-toggle"></a>
		<a href="#globalWrapper" title="back to top"
			class="menu-toggle" id="globalWrapper-toggle"></a>
	</div>
	<!-- end of the left (by default at least) column -->
	<div class="visualClear"></div>
	<div id="footer" class="mw-footer" role="contentinfo"
		>
		<div id="f-copyrightico" class="footer-icons">
			<a href="https://creativecommons.org/licenses/by/2.5/"><img src="https://creativecommons.org/images/public/somerights20.png" alt="Attribution2.5" width="88" height="31" loading="lazy"/></a>
		</div>
		<div id="f-poweredbyico" class="footer-icons">
			<a href="https://www.mediawiki.org/"><img src="/Wiki/resources/assets/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/Wiki/resources/assets/poweredby_mediawiki_132x47.png 1.5x, /Wiki/resources/assets/poweredby_mediawiki_176x62.png 2x" width="88" height="31" loading="lazy"/></a>
		</div>
		<ul id="f-list">
			<li id="lastmod"> This page was last edited on 18 May 2018, at 13:56.</li><li id="copyright">Content is available under <a class="external" rel="nofollow" href="https://creativecommons.org/licenses/by/2.5/">Attribution2.5</a> unless otherwise noted.</li>
			<li id="privacy"><a href="/Wiki/KitwarePublic:Privacy_policy" title="KitwarePublic:Privacy policy">Privacy policy</a></li><li id="about"><a href="/Wiki/KitwarePublic:About" title="KitwarePublic:About">About KitwarePublic</a></li><li id="disclaimer"><a href="/Wiki/KitwarePublic:General_disclaimer" title="KitwarePublic:General disclaimer">Disclaimers</a></li>
		</ul>
	</div>
</div>

<script>(RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.028","walltime":"0.273","ppvisitednodes":{"value":16,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":40},"expensivefunctioncount":{"value":0,"limit":100},"unstrip-depth":{"value":0,"limit":20},"unstrip-size":{"value":24226,"limit":5000000},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20220809022651","ttl":86400,"transientcontent":false}}});mw.config.set({"wgBackendResponseTime":89});});</script>
</body></html>